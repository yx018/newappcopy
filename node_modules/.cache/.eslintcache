[{"/Users/yangxu/newapp/src/index.js":"1","/Users/yangxu/newapp/src/App.js":"2","/Users/yangxu/newapp/src/example.js":"3","/Users/yangxu/newapp/src/MyComponent.js":"4","/Users/yangxu/newapp/src/VideoCanvas.js":"5","/Users/yangxu/newapp/src/utils.js":"6","/Users/yangxu/newapp/src/DetectCanvas.js":"7","/Users/yangxu/newapp/src/Utils.js":"8","/Users/yangxu/newapp/src/iexam.js":"9","/Users/yangxu/newappcopy/src/index.js":"10","/Users/yangxu/newappcopy/src/App.js":"11","/Users/yangxu/newappcopy/src/MyComponent.js":"12","/Users/yangxu/newappcopy/src/Utils.js":"13","/Users/yangxu/newappcopy/src/iexam.js":"14","/Users/yangxu/newappcopy/src/test/CreateZone.js":"15","/Users/yangxu/newappcopy/src/test/Zones.js":"16","/Users/yangxu/newappcopy/src/test/Zone.js":"17"},{"size":176,"mtime":1632832791803,"results":"18","hashOfConfig":"19"},{"size":1476,"mtime":1636530937887,"results":"20","hashOfConfig":"19"},{"size":493,"mtime":1633415427023,"results":"21","hashOfConfig":"19"},{"size":11661,"mtime":1636531720936,"results":"22","hashOfConfig":"19"},{"size":4780,"mtime":1633350701721,"results":"23","hashOfConfig":"24"},{"size":6048,"mtime":1636346529456,"results":"25","hashOfConfig":"24"},{"size":2169,"mtime":1632969597007,"results":"26","hashOfConfig":"24"},{"size":2376,"mtime":1636372934760,"results":"27","hashOfConfig":"19"},{"size":5853,"mtime":1636531012002,"results":"28","hashOfConfig":"19"},{"size":176,"mtime":1632832791803,"results":"29","hashOfConfig":"30"},{"size":1444,"mtime":1636949592743,"results":"31","hashOfConfig":"30"},{"size":14371,"mtime":1637728447332,"results":"32","hashOfConfig":"30"},{"size":2333,"mtime":1636977718419,"results":"33","hashOfConfig":"30"},{"size":5561,"mtime":1636709629555,"results":"34","hashOfConfig":"35"},{"size":1180,"mtime":1636750250517,"results":"36","hashOfConfig":"30"},{"size":1825,"mtime":1636750629570,"results":"37","hashOfConfig":"30"},{"size":508,"mtime":1636750572815,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"dxugfk",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"dpgvp8",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rveszr",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":2,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"1vyjdpc",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"/Users/yangxu/newapp/src/index.js",[],["85","86"],"/Users/yangxu/newapp/src/App.js",["87","88","89","90","91","92","93"],"/Users/yangxu/newapp/src/example.js",[],"/Users/yangxu/newapp/src/MyComponent.js",["94","95","96","97","98"],"/Users/yangxu/newapp/src/VideoCanvas.js",["99","100","101"],"import { useState } from \"react\";\nimport { OpenCvProvider } from 'opencv-react'\n\n\nfunction VideoCanvas(){\n\n    const [videoLoaded, setVideoLoaded] = useState(false);\n    const [FPS] = useState(30);\n    \n    const VideoUpload = () =>{\n        const video = document.getElementById(\"video\");\n        const canvas = document.getElementById(\"canvas\");\n        if (!videoLoaded) {\n            navigator.mediaDevices.getDisplayMedia({ video: { width: 1280, height: 720 }, audio: false })\n            .then(function(stream) {\n                video.srcObject = stream;\n                setVideoLoaded(true);\n                // processVideo()\n                \n    \n                \n                const settings = stream.getVideoTracks()[0].getSettings();\n                // console.log(settings);\n                // console.log('width' + stream.offsetWidth);\n\n                video.height = settings.height; // // resize video size\n                video.width = settings.width;\n                canvas.width = settings.width; // resize canvas size\n                canvas.height = settings.height;\n                // console.log(video.height);\n                video.play();\n                // GetFrame();\n                \n            })\n            .catch(function(err) {\n                console.log(\"No choose shared window! \" + err);\n            });\n            \n        }\n    }\n\n    // const GetFrame = ()=> {\n    //     const video = document.getElementById(\"video\");\n    //     const ctx = document.getElementById(\"canvas\").getContext('2d');\n    //     var begin = Date.now();\n        \n    //     // console.log(video)\n    //     ctx.drawImage(video, 0, 0);\n\n        \n    //     var delay = 1000 / FPS - (Date.now() - begin);\n    //     setTimeout(GetFrame, delay);\n    // }\n\n    const onLoaded = (cv) => {\n        console.log('AAA');\n        \n        console.log(cv);\n        // const video = document.getElementById(\"video\");\n    //     // const cascadeClassifier = new cv.CascadeClassifier();\n    //     // console.log(cascadeClassifier);\n    //     // cascadeClassifier\n\n        // let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n        // let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n        // let gray = new cv.Mat();\n        // let cap = new cv.VideoCapture(video);\n        // console.log(cap);\n        // console.log(src);\n        // cap.read(src);\n        // let faces = new cv.RectVector();\n        // let classifier = new cv.CascadeClassifier();\n\n        // let faceCascadeFile = 'haarcascade_frontalface_default.xml'; // path to xml\n        // classifier.load(faceCascadeFile);\n        // console.log(classifier);\n        \n    //     const processVideo = () =>{\n    //         // GetFrame();\n    //         console.log(src);\n    //         if (src!=null) {\n\n    //             cap.read(src);\n    //             src.copyTo(dst);\n    //             cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n    //             try{\n    //                 classifier.detectMultiScale(gray, faces, 1.1, 3, 0);\n    //                 console.log(faces.size());\n    //             }catch(err){\n    //                 console.log(err);\n    //             }\n    //             for (let i = 0; i < faces.size(); ++i) {\n    //                 let face = faces.get(i);\n    //                 let point1 = new cv.Point(face.x, face.y);\n    //                 let point2 = new cv.Point(face.x + face.width, face.y + face.height);\n    //                 cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\n    //             }\n    //             // cv.imshow(\"canvas\", dst);\n    //             // // schedule next one.\n    //             // let delay = 1000/FPS - (Date.now() - begin);\n    //             // setTimeout(processVideo, delay);\n\n                \n    //         }\n    //     }\n    //     // // schedule first one.\n    //     // setTimeout(processVideo, 0);\n        \n    }\n\n\n    \n    return(\n        <div>\n            <div id=\"videocontainer\">\n                <video className=\"center\" id=\"video\" muted onClick={VideoUpload}></video>\n                {/* <canvas id=\"canvas1\" ></canvas> */}\n                <div className=\"center\" id=\"startMessage\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/></svg>\n                </div>\n            </div>\n            <br />\n            <div id=\"processcontainer\" >\n                {/* <OpenCvProvider onLoad={onLoaded} openCvPath='/opencv/opencv.js'> */}\n                    <canvas className=\"center\" id=\"canvas\"></canvas>\n                {/* </OpenCvProvider> */}\n            </div>\n        </div>\n        \n    )\n}\n\n\nexport default VideoCanvas;",["102","103"],"/Users/yangxu/newapp/src/utils.js",["104","105","106","107","108"],"/Users/yangxu/newapp/src/DetectCanvas.js",["109"],"import { OpenCvProvider, useOpenCv } from 'opencv-react'\n\nconst DetectCanvas = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const video = document.getElementById(\"video\");\n    const data = useOpenCv()\n    console.log(data);\n\n    const onLoaded = (cv) => {\n        console.log('opencv loaded, cv');\n        console.log(cv);\n        console.log(canvas);\n\n        let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n        let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n        let gray = new cv.Mat();\n        let cap = new cv.VideoCapture(video);\n        let faces = new cv.RectVector();\n        let classifier = new cv.CascadeClassifier();\n\n        let faceCascadeFile = 'haarcascade_frontalface_default.xml'; // path to xml\n        classifier.load(faceCascadeFile);\n        console.log(classifier);\n        \n        const processVideo = () =>{\n            // GetFrame();\n            console.log(src);\n            if (src!=null) {\n\n                cap.read(src);\n                src.copyTo(dst);\n                cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n                try{\n                    classifier.detectMultiScale(gray, faces, 1.1, 3, 0);\n                    console.log(faces.size());\n                }catch(err){\n                    console.log(err);\n                }\n                for (let i = 0; i < faces.size(); ++i) {\n                    let face = faces.get(i);\n                    let point1 = new cv.Point(face.x, face.y);\n                    let point2 = new cv.Point(face.x + face.width, face.y + face.height);\n                    cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\n                }\n                // cv.imshow(\"canvas\", dst);\n                // // schedule next one.\n                // let delay = 1000/FPS - (Date.now() - begin);\n                // setTimeout(processVideo, delay);\n\n                \n            }\n        }\n        // // schedule first one.\n        // setTimeout(processVideo, 0);\n        \n\n    }\n\n    return(\n        <OpenCvProvider onLoad={onLoaded} openCvPath='/opencv/opencv.js'>\n        \n        </OpenCvProvider>\n    )\n}\n\nexport default DetectCanvas;",["110","111"],"/Users/yangxu/newapp/src/Utils.js",["112","113","114","115","116"],"import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {React, useCallback, useEffect} from 'react'\n\nfunction Utils(cv) {\n\n    // const { loaded, cv } = useOpenCv();\n\n    // useEffect(() => {\n    //     if (cv) {\n    //         console.log('utils useEffect', cv);\n    //     }\n    // }, [cv])\n\n    console.log('utils:', cv);\n\n    let self = this;\n    this.createFileFromUrl = function(path, url, callback) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function(ev) {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    let data = new Uint8Array(request.response);\n                    cv.FS_createDataFile('/', path, data, true, false, false);\n                    callback();\n                } \n                else {\n                    self.printError('Failed to load ' + url + ' status: ' + request.status);\n                    return;\n                }\n            }\n        };\n        console.log(request);\n        request.send();\n        \n    };\n\n    const OPENCV_URL = './opencv/opencv_js.wasm';\n    this.loadOpenCv = function(onloadCallback) {\n        let script = document.createElement('script');\n        script.setAttribute('async', '');\n        script.setAttribute('type', 'text/javascript');\n        script.addEventListener('load', async () => {\n            if (cv.getBuildInformation)\n            {\n                console.log(cv.getBuildInformation());\n                onloadCallback();\n            }\n            else\n            {\n                // WASM\n                if (cv instanceof Promise) {\n                    cv = await cv;\n                    console.log(cv.getBuildInformation());\n                    onloadCallback();\n                } else {\n                    cv['onRuntimeInitialized']=()=>{\n                        console.log(cv.getBuildInformation()); \n                        onloadCallback();\n                    }\n                }\n            }\n        });\n        script.addEventListener('error', () => {\n            self.printError('Failed to load ' + OPENCV_URL);\n        });\n        script.src = OPENCV_URL;\n        let node = document.getElementsByTagName('script')[0];\n        node.parentNode.insertBefore(script, node);\n    };\n}\n\nexport default Utils;","/Users/yangxu/newapp/src/iexam.js",["117","118","119","120","121","122"],"/Users/yangxu/newappcopy/src/index.js",[],"/Users/yangxu/newappcopy/src/App.js",["123","124","125","126","127","128","129"],"import './App.css';\nimport {React, useEffect} from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\";\nimport MyComponent from './MyComponent'\n// import Utils from './Utils';\n\nimport CreateZone from './test/CreateZone'\nimport Zones from './test/Zones';\nimport Zone from './test/Zone';\n\nimport { OpenCvProvider, useOpenCv } from 'opencv-react'\n\n\n\nfunction LoadOpenCv() {\n\n  const { loaded, cv } = useOpenCv()\n  const cv_status = document.getElementById(\"status\");\n\n  useEffect(() => {\n    console.log(loaded, cv);\n    console.log(window.cv);\n    if (loaded) {\n      cv_status.style.display = \"none\";\n    }\n  }, [loaded])\n  if (loaded)\n    return(<MyComponent />)\n  else\n    return (<p id=\"status\" style={{display: 'block'}, {fontSize: 20}}>OpenCV.js is loading...</p>)\n}\n\nconst App = () => {\n\n  useEffect(()=>{\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof(browserName));\n    console.log(browserName);\n    if (browserName == 'Safari'){\n      console.log(\"yes\");\n      while(true)\n        alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  })\n\n  const onLoaded = () => {\n    console.log('opencv loaded, cv')\n  }\n    \n  return (\n    <div> \n    <OpenCvProvider>\n      <LoadOpenCv />\n      {/* <MyComponent /> */}\n      {/* <CreateZone /> */}\n      {/* <Zones /> */}\n    </OpenCvProvider>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/yangxu/newappcopy/src/MyComponent.js",["130","131","132","133","134","135","136","137","138","139"],"import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {useEffect, useState} from 'react'\nimport './MyComponent.css';\nimport Utils from './Utils';\nimport axios from 'axios';\n\nfunction MyComponent() {\n\n    const { loaded, cv } = useOpenCv();\n    const [videoLoaded, setVideoLoaded] = useState(false);\n\n\n    useEffect(() => {\n        console.log(loaded, cv);\n        if (loaded) {\n            console.log('component cv loaded');\n            if(videoLoaded){\n                console.log('video loaded');\n\n                openCvReady();\n            }\n        }\n    }, [loaded, videoLoaded])\n\n    // const [count, setCount] = useState(0);\n\n    const catchZoomWindow = () => {\n        navigator.mediaDevices.getDisplayMedia({ video: true, audio: false })\n        .then(function(stream) {\n            var video = document.getElementById(\"cam_input\");\n            var add_button = document.getElementById(\"add\");\n            var zoom_window_text = document.getElementById(\"zoom_window_text\");\n            var process_window_text = document.getElementById(\"process_window_text\");\n            var output = document.getElementById(\"canvas_output\");\n            // console.log(video);\n            // console.log(stream);\n            video.srcObject = stream;\n            console.log(stream);\n            let settings = stream.getVideoTracks()[0].getSettings();\n            console.log(settings);\n            add_button.style.display = \"none\";\n            zoom_window_text.style.display = \"none\";\n            process_window_text.style.display = \"none\";\n            // FPS = settings.frameRate;\n            output.style.width = video.style.width;\n            output.style.height = video.style.height;\n            video.play();\n        })\n        .then(()=> {\n            // openCvReady();\n            // utils.loadOpenCv(openCvReady);\n            setVideoLoaded(true);\n            \n        })\n        .catch((err) =>{\n            console.log(\"An error occurred! \" + err);\n        });\n\n    }\n\n    function openCvReady() {\n        // const { loaded, cv } = useOpenCv();\n        \n        console.log('opencvReady', cv.Mat, loaded);\n        let utils = new Utils(cv);\n\n\n    \n        let FPS = 0.25;\n        let video = document.getElementById(\"cam_input\");\n        let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n        let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n        let gray = new cv.Mat();\n        let cap = new cv.VideoCapture(video);\n        let faces = new cv.RectVector();\n        let classifier = new cv.CascadeClassifier();\n        let minsize = new cv.Size(0, 0);\n        let maxsize = new cv.Size(1000, 1000);\n        let faceCascadeFile = \"haarcascade_frontalface_default.xml\";\n        let clip_width = video.width/5;\n        let clip_height = video.height/5;\n\n        console.log('cvReady classifier', classifier);\n        \n        console.log('here');\n\n        utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, ()=>{\n            classifier.load(faceCascadeFile);\n        });\n\n        \n        // utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n        //     console.log('here2');\n        //     classifier.load(faceCascadeFile) // in the callback, load the cascade from file\n        //     .then(()=>{\n        //         console.log('AAA'); \n        //         processVideo();\n        //     })\n        //     .catch((err)=>{console.log('load classifier:', err)});\n            \n        // });\n\n    \n        // let face_row = -1;\n        // let face_col = -1;\n    \n        // while(true){\n        //     let begin = Date.now();\n            \n        //     cap.read(src);\n        //     src.copyTo(dst);\n        //     cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n        //     console.log('process classifier:', classifier);\n        //     // console.log(classifier.load);\n        //     // console.log(gray);\n        //     // console.log(faces);\n            \n\n        //     try{\n        //         classifier.detectMultiScale(gray, faces, 1.1, 3);\n\n        //     }catch(err){\n        //         console.log(err);\n        //     }\n    \n        // }\n\n        function captureImageFromVideo() {\n            var canvas = document.createElement('canvas');\n            canvas.width = video.width * 0.5;\n            canvas.height = video.height * 0.5;\n            canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\n            // var img = document.createElement('img');\n            var base64Canvas = canvas.toDataURL('image/ipeg').split(';base64,')[1];\n            return base64Canvas;\n            \n        }\n\n        async function getFaceFromFaceplusplus() {\n            var post_img = captureImageFromVideo();\n            let formData = new FormData();\n            formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n            formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n            formData.append('image_base64', post_img);\n\n            let response = await fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                method: 'post',\n                mode: 'no-cors',\n                body: formData\n            });\n\n            // let data = await JSON.parse({\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519});\n            // let tmp_response ='{\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519}';\n            \n            let data = response.json();\n            return data;\n        }\n\n        function processVideo() {\n            let begin = Date.now();\n            if (video.srcObject!=null){\n                cap.read(src);\n                src.copyTo(dst);\n                cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n                // console.log('process classifier:', classifier);\n\n\n                var post_img = captureImageFromVideo();\n                let formData = new FormData();\n                formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n                formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n                formData.append('image_base64', post_img);\n\n                // console.log(post_img);\n\n                \n                // axios.post('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                //     // headers: {\n                //     //     'Access-Control-Allow-Origin': '*',\n                //     // },\n                //     mode: 'no-cors',\n                //     body: formData\n                // }).then(function (response) {\n                //     console.log(response);\n                // })\n                // .catch(function (error) {\n                // console.log(error);\n                // });\n\n                // fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                //     method: 'post',\n                //     mode: 'no-cors',\n                //     body: formData\n                // })\n                // // .then(res => res.json())\n                // .then(res => {\n                //     console.log(typeof(res));\n                //     console.log(res);\n                //     console.log(res.json());\n                // })\n                // .catch(function(err) {\n                //     console.log('fetch err:', err);\n                // });\n                \n\n                // let data = getFaceFromFaceplusplus();\n                // console.log('data:', data);\n\n\n                // var http = new XMLHttpRequest();\n                // var url = 'https://api-cn.faceplusplus.com/facepp/v3/detect';\n\n                // http.open('POST', url, true);\n                // http.setRequestHeader('Access-Control-Allow-Origin','*');\n\n                // http.onload = function() {//Call a function when the state changes.\n                //     if(http.readyState == 4 && http.status == 200) {\n                //         console.log(http.responseText);\n                //     }\n                //     else {\n                //         console.log('Failed to load ' + url + ' status: ' + http.status);\n                //     }\n                // }\n                // http.send(formData);\n\n                // error Message location\n                // classifier.detectMultiScale(gray, faces, 1.1, 3);\n    \n                try{\n                    classifier.detectMultiScale(gray, faces, 1.1, 3);\n                }catch(err){\n                    console.log(err);\n                }\n\n                for (let i = 0; i < faces.size(); ++i) {\n                    let face = faces.get(i);\n                    // console.log(face);\n                    let face_row = parseInt(face.y/clip_height);\n                    let face_col = parseInt(face.x/clip_width);\n    \n                    let tmp_row = parseInt((face.y+face.height-5) / clip_height);\n                    let tmp_col = parseInt((face.x+face.width-5) / clip_width);\n                    // console.log([face_row, face_col, tmp_row, tmp_col]);\n                    if (face.width>=clip_width || face.height>=clip_height || tmp_row!=face_row || tmp_col!=face_col)\n                        continue;\n    \n                    let point1 = new cv.Point(face.x, face.y);\n                    let point2 = new cv.Point(face.x + face.width, face.y + face.height);\n                    cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\n                }\n                cv.imshow(\"canvas_output\", dst);\n            }\n            // schedule next one.\n            let delay = 1000/FPS - (Date.now() - begin);\n            setTimeout(processVideo, delay);\n        }\n        // schedule first one.\n        setTimeout(processVideo, 0);\n        \n    }\n\n\n    // const cv = useOpenCv()\n    // console.log(cv)\n\n    // const video = document.getElementById(\"video\");\n    // let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n    // let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n    // let gray = new cv.Mat();\n    // let cap = new cv.VideoCapture(video);\n    // let faces = new cv.RectVector();\n    // let classifier = new cv.CascadeClassifier();\n\n    // let faceCascadeFile = 'haarcascade_frontalface_default.xml'; // path to xml\n    // classifier.load(faceCascadeFile);\n    // console.log(classifier);\n\n    // function onOpenUtilsReady() {\n    //     let utils = new Utils('errorMessage');\n    //     utils.loadOpenCv(() => {\n    //     let faceCascadeFile = 'haarcascade_frontalface_default.xml';\n    //         utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n    //             document.getElementById('status').innerHTML = 'OpenCV.js is ready.';\n    //         });\n    //     });\n    // }\n\n    return (\n        <>\n        <div className=\"container\">\n            <h2 id=\"title\">iExam</h2>\n            <h6 id=\"tip\">Please click add button to import the Zoom stream. Then you can scroll down to the iExam window.</h6>\n            <p id=\"zoom_window_text\">Zoom window</p>\n            <video id=\"cam_input\" width=\"1200\" height=\"690\" autoPlay muted></video>\n            {/* <img id=\"add\" src=\"add.svg\" alt=\"upload video window\" width=\"128\" height=\"128\" /> */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"add\" onClick={catchZoomWindow} width=\"120\" height=\"120\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/></svg>\n            <p id=\"process_window_text\">iExam window</p>\n            <canvas id=\"canvas_output\" width=\"1200\" height=\"690\">This box is for capturing student face</canvas>\n        </div>\n        <div className=\"footer\">\n            <p>Details for iExam please refer to slides: <a href=\"https://daoyuan14.github.io/slides/Expo21_iExam.pdf\" target=\"_blank\">https://daoyuan14.github.io/slides/Expo21_iExam.pdf</a></p>\n            <p>Post-exam recording analysis for desktop version, please view: <a href=\"https://github.com/VPRLab/iExam/tree/test\" target=\"_blank\">https://github.com/VPRLab/iExam/tree/test </a></p>\n            {/* <p id=\"author\">Author: YANG Xu, Supervisor: WU Daoyuan (VPRLab)</p>\n            <p>Last Modified: Mon Oct 25 2021 23:12:29 GMT+0800 (Hong Kong Standard Time)</p> */}\n        </div>\n        </>\n        \n    )\n}\n\n// function Utils() {\n//     let self = this;\n//     this.createFileFromUrl = function(path, url, callback) {\n//         console.log(cv);\n//         let request = new XMLHttpRequest();\n//         request.open('GET', url, true);\n//         request.responseType = 'arraybuffer';\n//         request.onload = function(ev) {\n//             if (request.readyState === 4) {\n//                 if (request.status === 200) {\n//                     let data = new Uint8Array(request.response);\n//                     cv.FS_createDataFile('/', path, data, true, false, false);\n//                     callback();\n//                 } else {\n//                     self.printError('Failed to load ' + url + ' status: ' + request.status);\n//                 }\n//             }\n//         };\n//         request.send();\n        \n//     };\n\n//     const OPENCV_URL = './opencv/opencv.js';\n//     this.loadOpenCv = function(onloadCallback) {\n//         let script = document.createElement('script');\n//         script.setAttribute('async', '');\n//         script.setAttribute('type', 'text/javascript');\n//         script.addEventListener('load', async () => {\n//             if (cv.getBuildInformation)\n//             {\n//                 console.log(cv.getBuildInformation());\n//                 onloadCallback();\n//             }\n//             else\n//             {\n//                 // WASM\n//                 if (cv instanceof Promise) {\n//                     cv = await cv;\n//                     console.log(cv.getBuildInformation());\n//                     onloadCallback();\n//                 } else {\n//                     cv['onRuntimeInitialized']=()=>{  //satisfy this condition\n//                         console.log(cv.getBuildInformation()); \n//                         onloadCallback();\n//                     }\n//                 }\n//             }\n//         });\n//         script.addEventListener('error', () => {\n//             self.printError('Failed to load ' + OPENCV_URL);\n//         });\n//         script.src = OPENCV_URL;\n//         let node = document.getElementsByTagName('script')[0];\n//         node.parentNode.insertBefore(script, node);\n//     };\n// }\n\n\n\nexport default MyComponent;\n\n\n","/Users/yangxu/newappcopy/src/Utils.js",["140","141","142","143","144"],"import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {React, useCallback, useEffect} from 'react'\n\nfunction Utils(cv) {\n\n    // const { loaded, cv } = useOpenCv();\n\n    // useEffect(() => {\n    //     if (cv) {\n    //         console.log('utils useEffect', cv);\n    //     }\n    // }, [cv])\n\n    console.log('utils:', cv);\n\n    let self = this;\n    this.createFileFromUrl = function(path, url, callback) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function(ev) {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    let data = new Uint8Array(request.response);\n                    cv.FS_createDataFile('/', path, data, true, false, false);\n                    callback();\n\n                } \n                else {\n                    self.printError('Failed to load ' + url + ' status: ' + request.status);\n                    return;\n                }\n            }\n        };\n        request.send();\n    };\n\n    const OPENCV_URL = './opencv/opencv.js';\n    this.loadOpenCv = function(onloadCallback) {\n        let script = document.createElement('script');\n        script.setAttribute('async', '');\n        script.setAttribute('type', 'text/javascript');\n        script.addEventListener('load', async () => {\n            if (cv.getBuildInformation)\n            {\n                console.log(cv.getBuildInformation());\n                onloadCallback();\n            }\n            else\n            {\n                // WASM\n                if (cv instanceof Promise) {\n                    cv = await cv;\n                    console.log(cv.getBuildInformation());\n                    onloadCallback();\n                } else {\n                    cv['onRuntimeInitialized']=()=>{\n                        console.log(cv.getBuildInformation()); \n                        onloadCallback();\n                    }\n                }\n            }\n        });\n        script.addEventListener('error', () => {\n            self.printError('Failed to load ' + OPENCV_URL);\n        });\n        script.src = OPENCV_URL;\n        let node = document.getElementsByTagName('script')[0];\n        node.parentNode.insertBefore(script, node);\n    };\n}\n\nexport default Utils;","/Users/yangxu/newappcopy/src/iexam.js",["145","146","147","148","149","150"],"\nvar add_button = document.getElementById(\"add\");\nvar zoom_window_text = document.getElementById(\"zoom_window_text\");\nvar process_window_text = document.getElementById(\"process_window_text\");\nvar video = document.getElementById(\"cam_input\");\nvar output = document.getElementById(\"canvas_output\");\nvar container = document.getElementById(\"container\");\n\nconsole.log(window.cv);\n// let utils = new Utils();\n\n\n// add.addEventListener(\"click\", function(e) {\n//     navigator.mediaDevices.getDisplayMedia({ video: true, audio: false })\n//     .then(function(stream) {\n//         video.srcObject = stream;\n//         let settings = stream.getVideoTracks()[0].getSettings();\n//         console.log(settings);\n//         add_button.style.display = \"none\";\n//         zoom_window_text.style.display = \"none\";\n//         process_window_text.style.display = \"none\";\n//         // FPS = settings.frameRate;\n//         output.style.width = video.style.width;\n//         output.style.height = video.style.height;\n//         video.play();\n//     })\n//     .then(()=> {\n//         utils.loadOpenCv(openCvReady);\n//     })\n//     .catch(function(err) {\n//         console.log(\"An error occurred! \" + err);\n//     });\n// })\n\n// function openCvReady() {\n//     // console.log(cv);\n//     let FPS = 30;\n//     let video = document.getElementById(\"cam_input\");\n//     let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n//     let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n//     let gray = new cv.Mat();\n//     let cap = new cv.VideoCapture(cam_input);\n//     let faces = new cv.RectVector();\n//     let classifier = new cv.CascadeClassifier();\n//     let minsize = new cv.Size(0, 0);\n//     let maxsize = new cv.Size(1000, 1000);\n//     let faceCascadeFile = 'haarcascade_frontalface_default.xml';\n//     utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n//         classifier.load(faceCascadeFile); // in the callback, load the cascade from file \n//     });\n//     let face_row = -1;\n//     let face_col = -1;\n//     let clip_width = video.width/5;\n//     let clip_height = video.height/5;\n//     function processVideo() {\n//         let begin = Date.now();\n//         if (video.srcObject!=null){\n//             cap.read(src);\n//             src.copyTo(dst);\n//             cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n//             try{\n//                 classifier.detectMultiScale(gray, faces, 1.1, 3);\n//                 console.log(\"face size: \"+ faces.size());\n//             }catch(err){\n//                 console.log(err);\n//             }\n//             for (let i = 0; i < faces.size(); ++i) {\n//                 let face = faces.get(i);\n//                 // console.log(face);\n//                 let face_row = parseInt(face.y/clip_height);\n//                 let face_col = parseInt(face.x/clip_width);\n\n//                 let tmp_row = parseInt((face.y+face.height-5) / clip_height);\n//                 let tmp_col = parseInt((face.x+face.width-5) / clip_width);\n//                 // console.log([face_row, face_col, tmp_row, tmp_col]);\n//                 if (face.width>=clip_width || face.height>=clip_height || tmp_row!=face_row || tmp_col!=face_col)\n//                     continue;\n\n//                 let point1 = new cv.Point(face.x, face.y);\n//                 let point2 = new cv.Point(face.x + face.width, face.y + face.height);\n//                 cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\n//             }\n//             cv.imshow(\"canvas_output\", dst);\n//         }\n//         // schedule next one.\n//         let delay = 1000/FPS - (Date.now() - begin);\n//         setTimeout(processVideo, delay);\n//     }\n//     // schedule first one.\n//     setTimeout(processVideo, 0); \n// }\n\n// function Utils() {\n//     let self = this;\n//     this.createFileFromUrl = function(path, url, callback) {\n//         let request = new XMLHttpRequest();\n//         request.open('GET', url, true);\n//         request.responseType = 'arraybuffer';\n//         request.onload = function(ev) {\n//             if (request.readyState === 4) {\n//                 if (request.status === 200) {\n//                     let data = new Uint8Array(request.response);\n//                     cv.FS_createDataFile('/', path, data, true, false, false);\n//                     callback();\n//                 } else {\n//                     self.printError('Failed to load ' + url + ' status: ' + request.status);\n//                 }\n//             }\n//         };\n//         request.send();\n        \n//     };\n\n//     const OPENCV_URL = 'opencv.js';\n//     this.loadOpenCv = function(onloadCallback) {\n//         let script = document.createElement('script');\n//         script.setAttribute('async', '');\n//         script.setAttribute('type', 'text/javascript');\n//         script.addEventListener('load', async () => {\n//             if (cv.getBuildInformation)\n//             {\n//                 console.log(cv.getBuildInformation());\n//                 onloadCallback();\n//             }\n//             else\n//             {\n//                 // WASM\n//                 if (cv instanceof Promise) {\n//                     cv = await cv;\n//                     console.log(cv.getBuildInformation());\n//                     onloadCallback();\n//                 } else {\n//                     cv['onRuntimeInitialized']=()=>{  //satisfy this condition\n//                         console.log(cv.getBuildInformation()); \n//                         onloadCallback();\n//                     }\n//                 }\n//             }\n//         });\n//         script.addEventListener('error', () => {\n//             self.printError('Failed to load ' + OPENCV_URL);\n//         });\n//         script.src = OPENCV_URL;\n//         let node = document.getElementsByTagName('script')[0];\n//         node.parentNode.insertBefore(script, node);\n//     };\n// }",["151","152"],"/Users/yangxu/newappcopy/src/test/CreateZone.js",[],"/Users/yangxu/newappcopy/src/test/Zones.js",[],"/Users/yangxu/newappcopy/src/test/Zone.js",["153"],"import React, { Component } from \"react\";\n\nexport default class Zone extends Component {\n  render() {\n\n    return (\n      <div >\n        <h2 >\n          <a href=\"#\">\n            {\" \"}\n            {this.props.currentZone.name}{\" \"}\n          </a>\n        </h2>\n        <span className=\"detail\"> {this.props.currentZone.zipCodes} </span>{\" \"}\n        <br />\n        <span className=\"detail\">\n          {\" \"}\n          {this.props.currentZone.numComments} comments{\" \"}\n        </span>\n      </div>\n    );\n  }\n}",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":8,"column":8,"nodeType":"160","messageId":"161","endLine":8,"endColumn":13},{"ruleId":"158","severity":1,"message":"162","line":10,"column":10,"nodeType":"160","messageId":"161","endLine":10,"endColumn":24},{"ruleId":"158","severity":1,"message":"163","line":15,"column":10,"nodeType":"160","messageId":"161","endLine":15,"endColumn":20},{"ruleId":"158","severity":1,"message":"164","line":18,"column":19,"nodeType":"160","messageId":"161","endLine":18,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":26,"column":6,"nodeType":"167","endLine":26,"endColumn":14,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":27,"column":51,"nodeType":"171","messageId":"172","endLine":27,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":37,"column":21,"nodeType":"175","messageId":"176","endLine":37,"endColumn":23},{"ruleId":"158","severity":1,"message":"177","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":18},{"ruleId":"158","severity":1,"message":"178","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":20},{"ruleId":"158","severity":1,"message":"179","line":10,"column":12,"nodeType":"160","messageId":"161","endLine":10,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":231,"column":58,"nodeType":"182","messageId":"183","endLine":231,"endColumn":136,"fix":"184"},{"ruleId":"180","severity":1,"message":"181","line":232,"column":79,"nodeType":"182","messageId":"183","endLine":232,"endColumn":147,"fix":"185"},{"ruleId":"158","severity":1,"message":"162","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":24},{"ruleId":"158","severity":1,"message":"186","line":8,"column":12,"nodeType":"160","messageId":"161","endLine":8,"endColumn":15},{"ruleId":"158","severity":1,"message":"187","line":55,"column":11,"nodeType":"160","messageId":"161","endLine":55,"endColumn":19},{"ruleId":"154","replacedBy":"188"},{"ruleId":"156","replacedBy":"189"},{"ruleId":"158","severity":1,"message":"162","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":24},{"ruleId":"158","severity":1,"message":"190","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"191","line":6,"column":13,"nodeType":"160","messageId":"161","endLine":6,"endColumn":19},{"ruleId":"158","severity":1,"message":"192","line":54,"column":25,"nodeType":"160","messageId":"161","endLine":54,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":84,"column":13,"nodeType":"195","messageId":"176","endLine":84,"endColumn":17},{"ruleId":"158","severity":1,"message":"196","line":25,"column":15,"nodeType":"160","messageId":"161","endLine":25,"endColumn":27},{"ruleId":"154","replacedBy":"197"},{"ruleId":"156","replacedBy":"198"},{"ruleId":"158","severity":1,"message":"162","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":24},{"ruleId":"158","severity":1,"message":"199","line":1,"column":26,"nodeType":"160","messageId":"161","endLine":1,"endColumn":35},{"ruleId":"158","severity":1,"message":"190","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"200","line":2,"column":16,"nodeType":"160","messageId":"161","endLine":2,"endColumn":27},{"ruleId":"158","severity":1,"message":"177","line":2,"column":29,"nodeType":"160","messageId":"161","endLine":2,"endColumn":38},{"ruleId":"158","severity":1,"message":"201","line":2,"column":5,"nodeType":"160","messageId":"161","endLine":2,"endColumn":15},{"ruleId":"158","severity":1,"message":"202","line":3,"column":5,"nodeType":"160","messageId":"161","endLine":3,"endColumn":21},{"ruleId":"158","severity":1,"message":"203","line":4,"column":5,"nodeType":"160","messageId":"161","endLine":4,"endColumn":24},{"ruleId":"158","severity":1,"message":"204","line":5,"column":5,"nodeType":"160","messageId":"161","endLine":5,"endColumn":10},{"ruleId":"158","severity":1,"message":"205","line":6,"column":5,"nodeType":"160","messageId":"161","endLine":6,"endColumn":11},{"ruleId":"158","severity":1,"message":"206","line":7,"column":5,"nodeType":"160","messageId":"161","endLine":7,"endColumn":14},{"ruleId":"158","severity":1,"message":"207","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":18},{"ruleId":"158","severity":1,"message":"208","line":8,"column":8,"nodeType":"160","messageId":"161","endLine":8,"endColumn":13},{"ruleId":"158","severity":1,"message":"209","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":12},{"ruleId":"165","severity":1,"message":"210","line":26,"column":6,"nodeType":"167","endLine":26,"endColumn":14,"suggestions":"211"},{"ruleId":"169","severity":1,"message":"170","line":30,"column":53,"nodeType":"171","messageId":"172","endLine":30,"endColumn":54},{"ruleId":"173","severity":1,"message":"174","line":39,"column":21,"nodeType":"175","messageId":"176","endLine":39,"endColumn":23},{"ruleId":"158","severity":1,"message":"187","line":46,"column":9,"nodeType":"160","messageId":"161","endLine":46,"endColumn":17},{"ruleId":"158","severity":1,"message":"162","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":24},{"ruleId":"158","severity":1,"message":"212","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"165","severity":1,"message":"213","line":23,"column":8,"nodeType":"167","endLine":23,"endColumn":29,"suggestions":"214"},{"ruleId":"158","severity":1,"message":"215","line":77,"column":13,"nodeType":"160","messageId":"161","endLine":77,"endColumn":20},{"ruleId":"158","severity":1,"message":"216","line":78,"column":13,"nodeType":"160","messageId":"161","endLine":78,"endColumn":20},{"ruleId":"158","severity":1,"message":"217","line":139,"column":24,"nodeType":"160","messageId":"161","endLine":139,"endColumn":47},{"ruleId":"173","severity":1,"message":"218","line":244,"column":86,"nodeType":"175","messageId":"176","endLine":244,"endColumn":88},{"ruleId":"173","severity":1,"message":"218","line":244,"column":107,"nodeType":"175","messageId":"176","endLine":244,"endColumn":109},{"ruleId":"180","severity":1,"message":"181","line":301,"column":58,"nodeType":"182","messageId":"183","endLine":301,"endColumn":136,"fix":"219"},{"ruleId":"180","severity":1,"message":"181","line":302,"column":79,"nodeType":"182","messageId":"183","endLine":302,"endColumn":147,"fix":"220"},{"ruleId":"158","severity":1,"message":"162","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":24},{"ruleId":"158","severity":1,"message":"199","line":1,"column":26,"nodeType":"160","messageId":"161","endLine":1,"endColumn":35},{"ruleId":"158","severity":1,"message":"190","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"200","line":2,"column":16,"nodeType":"160","messageId":"161","endLine":2,"endColumn":27},{"ruleId":"158","severity":1,"message":"177","line":2,"column":29,"nodeType":"160","messageId":"161","endLine":2,"endColumn":38},{"ruleId":"158","severity":1,"message":"201","line":2,"column":5,"nodeType":"160","messageId":"161","endLine":2,"endColumn":15},{"ruleId":"158","severity":1,"message":"202","line":3,"column":5,"nodeType":"160","messageId":"161","endLine":3,"endColumn":21},{"ruleId":"158","severity":1,"message":"203","line":4,"column":5,"nodeType":"160","messageId":"161","endLine":4,"endColumn":24},{"ruleId":"158","severity":1,"message":"204","line":5,"column":5,"nodeType":"160","messageId":"161","endLine":5,"endColumn":10},{"ruleId":"158","severity":1,"message":"205","line":6,"column":5,"nodeType":"160","messageId":"161","endLine":6,"endColumn":11},{"ruleId":"158","severity":1,"message":"206","line":7,"column":5,"nodeType":"160","messageId":"161","endLine":7,"endColumn":14},{"ruleId":"154","replacedBy":"221"},{"ruleId":"156","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":9,"column":11,"nodeType":"182","endLine":9,"endColumn":23},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'Utils' is defined but never used.","Identifier","unusedVar","'OpenCvProvider' is defined but never used.","'LoadOpenCv' is defined but never used.","'cv' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cv_status.style'. Either include it or remove the dependency array.","ArrayExpression",["227"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'checkBrowser' is defined but never used.","'videoLoaded' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"228","text":"229"},{"range":"230","text":"229"},"'FPS' is assigned a value but never used.","'onLoaded' is assigned a value but never used.",["225"],["226"],"'React' is defined but never used.","'loaded' is assigned a value but never used.","'data' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","'processVideo' is assigned a value but never used.",["225"],["226"],"'useOpenCv' is defined but never used.","'useCallback' is defined but never used.","'add_button' is assigned a value but never used.","'zoom_window_text' is assigned a value but never used.","'process_window_text' is assigned a value but never used.","'video' is assigned a value but never used.","'output' is assigned a value but never used.","'container' is assigned a value but never used.","'CreateZone' is defined but never used.","'Zones' is defined but never used.","'Zone' is defined but never used.","React Hook useEffect has missing dependencies: 'cv' and 'cv_status.style'. Either include them or remove the dependency array.",["231"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'cv' and 'openCvReady'. Either include them or remove the dependency array.",["232"],"'minsize' is assigned a value but never used.","'maxsize' is assigned a value but never used.","'getFaceFromFaceplusplus' is defined but never used.","Expected '!==' and instead saw '!='.",{"range":"233","text":"229"},{"range":"234","text":"229"},["225"],["226"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},[8929,8929]," rel=\"noreferrer\"",[9135,9135],{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},[11682,11682],[11888,11888],"Update the dependencies array to be: [cv_status.style, loaded]",{"range":"241","text":"242"},"Update the dependencies array to be: [cv, cv_status.style, loaded]",{"range":"243","text":"244"},"Update the dependencies array to be: [cv, loaded, openCvReady, videoLoaded]",{"range":"245","text":"246"},[621,629],"[cv_status.style, loaded]",[634,642],"[cv, cv_status.style, loaded]",[573,594],"[cv, loaded, openCvReady, videoLoaded]"]