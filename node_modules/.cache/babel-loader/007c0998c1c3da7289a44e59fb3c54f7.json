{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { OpenCvProvider, useOpenCv } from 'opencv-react';\nimport { React, useEffect } from 'react';\n\nfunction Utils() {\n  _s();\n\n  const {\n    loaded,\n    cv\n  } = useOpenCv();\n  useEffect(() => {\n    if (cv) {\n      console.log('utils useEffect', cv);\n    }\n  }, [cv]);\n  let self = this;\n\n  this.createFileFromUrl = function (path, url, callback) {\n    let request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n\n    request.onload = function (ev) {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          let data = new Uint8Array(request.response);\n          cv.FS_createDataFile('/', path, data, true, false, false).then;\n          callback();\n        } else {\n          self.printError('Failed to load ' + url + ' status: ' + request.status);\n        }\n      }\n    };\n\n    console.log(request);\n    request.send();\n  };\n\n  const OPENCV_URL = './opencv/opencv.js';\n\n  this.loadOpenCv = function (onloadCallback) {\n    let script = document.createElement('script');\n    script.setAttribute('async', '');\n    script.setAttribute('type', 'text/javascript');\n    script.addEventListener('load', async () => {\n      if (cv.getBuildInformation) {\n        console.log(cv.getBuildInformation());\n        onloadCallback();\n      } else {\n        // WASM\n        if (cv instanceof Promise) {\n          cv = await cv;\n          console.log(cv.getBuildInformation());\n          onloadCallback();\n        } else {\n          cv['onRuntimeInitialized'] = () => {\n            console.log(cv.getBuildInformation());\n            onloadCallback();\n          };\n        }\n      }\n    });\n    script.addEventListener('error', () => {\n      self.printError('Failed to load ' + OPENCV_URL);\n    });\n    script.src = OPENCV_URL;\n    let node = document.getElementsByTagName('script')[0];\n    node.parentNode.insertBefore(script, node);\n  };\n}\n\n_s(Utils, \"UIea8lFmfe2lGJ/UwKqtq8/rXNE=\", false, function () {\n  return [useOpenCv];\n});\n\n_c = Utils;\nexport default Utils;\n\nvar _c;\n\n$RefreshReg$(_c, \"Utils\");","map":{"version":3,"sources":["/Users/yangxu/newapp/src/Utils.js"],"names":["OpenCvProvider","useOpenCv","React","useEffect","Utils","loaded","cv","console","log","self","createFileFromUrl","path","url","callback","request","XMLHttpRequest","open","responseType","onload","ev","readyState","status","data","Uint8Array","response","FS_createDataFile","then","printError","send","OPENCV_URL","loadOpenCv","onloadCallback","script","document","createElement","setAttribute","addEventListener","getBuildInformation","Promise","src","node","getElementsByTagName","parentNode","insertBefore"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,SAAzB,QAA0C,cAA1C;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,OAA/B;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAiBL,SAAS,EAAhC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,EAAJ,EAAQ;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,EAA/B;AACH;AACJ,GAJQ,EAIN,CAACA,EAAD,CAJM,CAAT;AAMA,MAAIG,IAAI,GAAG,IAAX;;AACA,OAAKC,iBAAL,GAAyB,UAASC,IAAT,EAAeC,GAAf,EAAoBC,QAApB,EAA8B;AACnD,QAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBJ,GAApB,EAAyB,IAAzB;AACAE,IAAAA,OAAO,CAACG,YAAR,GAAuB,aAAvB;;AACAH,IAAAA,OAAO,CAACI,MAAR,GAAiB,UAASC,EAAT,EAAa;AAC1B,UAAIL,OAAO,CAACM,UAAR,KAAuB,CAA3B,EAA8B;AAC1B,YAAIN,OAAO,CAACO,MAAR,KAAmB,GAAvB,EAA4B;AACxB,cAAIC,IAAI,GAAG,IAAIC,UAAJ,CAAeT,OAAO,CAACU,QAAvB,CAAX;AACAlB,UAAAA,EAAE,CAACmB,iBAAH,CAAqB,GAArB,EAA0Bd,IAA1B,EAAgCW,IAAhC,EAAsC,IAAtC,EAA4C,KAA5C,EAAmD,KAAnD,EACCI,IADD;AAEAb,UAAAA,QAAQ;AACX,SALD,MAMK;AACDJ,UAAAA,IAAI,CAACkB,UAAL,CAAgB,oBAAoBf,GAApB,GAA0B,WAA1B,GAAwCE,OAAO,CAACO,MAAhE;AACH;AACJ;AACJ,KAZD;;AAaAd,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACAA,IAAAA,OAAO,CAACc,IAAR;AACH,GAnBD;;AAqBA,QAAMC,UAAU,GAAG,oBAAnB;;AACA,OAAKC,UAAL,GAAkB,UAASC,cAAT,EAAyB;AACvC,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,YAAP,CAAoB,OAApB,EAA6B,EAA7B;AACAH,IAAAA,MAAM,CAACG,YAAP,CAAoB,MAApB,EAA4B,iBAA5B;AACAH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC,UAAI9B,EAAE,CAAC+B,mBAAP,EACA;AACI9B,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAAC+B,mBAAH,EAAZ;AACAN,QAAAA,cAAc;AACjB,OAJD,MAMA;AACI;AACA,YAAIzB,EAAE,YAAYgC,OAAlB,EAA2B;AACvBhC,UAAAA,EAAE,GAAG,MAAMA,EAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAAC+B,mBAAH,EAAZ;AACAN,UAAAA,cAAc;AACjB,SAJD,MAIO;AACHzB,UAAAA,EAAE,CAAC,sBAAD,CAAF,GAA2B,MAAI;AAC3BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAAC+B,mBAAH,EAAZ;AACAN,YAAAA,cAAc;AACjB,WAHD;AAIH;AACJ;AACJ,KApBD;AAqBAC,IAAAA,MAAM,CAACI,gBAAP,CAAwB,OAAxB,EAAiC,MAAM;AACnC3B,MAAAA,IAAI,CAACkB,UAAL,CAAgB,oBAAoBE,UAApC;AACH,KAFD;AAGAG,IAAAA,MAAM,CAACO,GAAP,GAAaV,UAAb;AACA,QAAIW,IAAI,GAAGP,QAAQ,CAACQ,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAAX;AACAD,IAAAA,IAAI,CAACE,UAAL,CAAgBC,YAAhB,CAA6BX,MAA7B,EAAqCQ,IAArC;AACH,GA/BD;AAgCH;;GAjEQpC,K;UAEkBH,S;;;KAFlBG,K;AAmET,eAAeA,KAAf","sourcesContent":["import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {React, useEffect} from 'react'\n\nfunction Utils() {\n\n    const { loaded, cv } = useOpenCv()\n\n    useEffect(() => {\n        if (cv) {\n            console.log('utils useEffect', cv);\n        }\n    }, [cv])\n\n    let self = this;\n    this.createFileFromUrl = function(path, url, callback) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function(ev) {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    let data = new Uint8Array(request.response);\n                    cv.FS_createDataFile('/', path, data, true, false, false)\n                    .then;\n                    callback();\n                } \n                else {\n                    self.printError('Failed to load ' + url + ' status: ' + request.status);\n                }\n            }\n        };\n        console.log(request);\n        request.send();\n    };\n\n    const OPENCV_URL = './opencv/opencv.js';\n    this.loadOpenCv = function(onloadCallback) {\n        let script = document.createElement('script');\n        script.setAttribute('async', '');\n        script.setAttribute('type', 'text/javascript');\n        script.addEventListener('load', async () => {\n            if (cv.getBuildInformation)\n            {\n                console.log(cv.getBuildInformation());\n                onloadCallback();\n            }\n            else\n            {\n                // WASM\n                if (cv instanceof Promise) {\n                    cv = await cv;\n                    console.log(cv.getBuildInformation());\n                    onloadCallback();\n                } else {\n                    cv['onRuntimeInitialized']=()=>{\n                        console.log(cv.getBuildInformation()); \n                        onloadCallback();\n                    }\n                }\n            }\n        });\n        script.addEventListener('error', () => {\n            self.printError('Failed to load ' + OPENCV_URL);\n        });\n        script.src = OPENCV_URL;\n        let node = document.getElementsByTagName('script')[0];\n        node.parentNode.insertBefore(script, node);\n    };\n}\n\nexport default Utils;"]},"metadata":{},"sourceType":"module"}