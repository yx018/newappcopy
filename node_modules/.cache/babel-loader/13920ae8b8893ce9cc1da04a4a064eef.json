{"ast":null,"code":"var _jsxFileName = \"/Users/yangxu/newapp/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { React, useEffect } from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\"; // import VideoCanvas from './VideoCanvas';\n\nimport MyComponent from './MyComponent'; // import DetectCanvas from './DetectCanvas';\n\nimport Example from './example';\nimport Utils from './Utils';\nimport { OpenCvProvider, useOpenCv } from 'opencv-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadOpenCv() {\n  _s();\n\n  const data = useOpenCv();\n  console.log(data);\n  const {\n    loaded,\n    cv\n  } = useOpenCv();\n  const cv_status = document.getElementById(\"status\");\n  useEffect(() => {\n    if (cv) {\n      console.log(loaded, cv);\n      cv_status.style.display = \"none\";\n    }\n  }, [cv]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    id: \"status\",\n    style: ({\n      display: 'block'\n    }, {\n      fontSize: 20\n    }),\n    children: \"OpenCV.js is loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }, this); // return <p>OpenCv React test</p>\n}\n\n_s(LoadOpenCv, \"LpECJ++msjD7ZWAn6PgQyV8g1dQ=\", false, function () {\n  return [useOpenCv, useOpenCv];\n});\n\n_c = LoadOpenCv;\n\nconst App = () => {\n  _s2();\n\n  useEffect(() => {\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof browserName);\n    console.log(browserName);\n\n    if (browserName == 'Safari') {\n      console.log(\"yes\");\n\n      while (true) alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  });\n\n  const onLoaded = cv => {\n    console.log('opencv loaded, cv');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(OpenCvProvider, {\n      onLoad: onLoaded,\n      openCvPath: \"/opencv/opencv.js\",\n      children: [/*#__PURE__*/_jsxDEV(LoadOpenCv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MyComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadOpenCv\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/yangxu/newapp/src/App.js"],"names":["React","useEffect","browserName","browserVersion","MyComponent","Example","Utils","OpenCvProvider","useOpenCv","LoadOpenCv","data","console","log","loaded","cv","cv_status","document","getElementById","style","display","fontSize","App","alert","onLoaded"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,qBAA5C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,cAA1C;;;AAKA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAMC,IAAI,GAAGF,SAAS,EAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAiBN,SAAS,EAAhC;AACA,QAAMO,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAlB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,EAAJ,EAAQ;AACNH,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAAoBC,EAApB;AACAC,MAAAA,SAAS,CAACG,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAED;AACF,GANQ,EAMN,CAACL,EAAD,CANM,CAAT;AAOA,sBAAQ;AAAG,IAAA,EAAE,EAAC,QAAN;AAAe,IAAA,KAAK,GAAE;AAACK,MAAAA,OAAO,EAAE;AAAV,OAAoB;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAtB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR,CAdoB,CAiBpB;AACD;;GAlBQX,U;UAEMD,S,EAEUA,S;;;KAJhBC,U;;AAoBT,MAAMY,GAAG,GAAG,MAAM;AAAA;;AAEhBpB,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEV,WAAY,IAAGC,cAAe,EAA7C;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOV,WAAnB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;;AACA,QAAIA,WAAW,IAAI,QAAnB,EAA4B;AAC1BS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,aAAM,IAAN,EACEU,KAAK,CAAC,sGAAD,CAAL;AACH;AACF,GATQ,CAAT;;AAWA,QAAMC,QAAQ,GAAIT,EAAD,IAAQ;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,2BACA,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEW,QAAxB;AAAkC,MAAA,UAAU,EAAC,mBAA7C;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5BD;;IAAMF,G;;MAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useEffect} from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\";\n// import VideoCanvas from './VideoCanvas';\nimport MyComponent from './MyComponent'\n// import DetectCanvas from './DetectCanvas';\nimport Example from './example';\nimport Utils from './Utils';\n\nimport { OpenCvProvider, useOpenCv } from 'opencv-react'\n\n\n\n\nfunction LoadOpenCv() {\n\n  const data = useOpenCv()\n  console.log(data)\n  const { loaded, cv } = useOpenCv()\n  const cv_status = document.getElementById(\"status\");\n\n  useEffect(() => {\n    if (cv) {\n      console.log(loaded, cv);\n      cv_status.style.display = \"none\";\n\n    }\n  }, [cv])\n  return (<p id=\"status\" style={{display: 'block'}, {fontSize: 20}}>OpenCV.js is loading...</p>)\n  \n  \n  // return <p>OpenCv React test</p>\n}\n\nconst App = () => {\n\n  useEffect(()=>{\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof(browserName));\n    console.log(browserName);\n    if (browserName == 'Safari'){\n      console.log(\"yes\");\n      while(true)\n        alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  })\n\n  const onLoaded = (cv) => {\n    console.log('opencv loaded, cv')\n  }\n    \n  return (\n    <div> \n    <OpenCvProvider onLoad={onLoaded} openCvPath='/opencv/opencv.js'>\n      <LoadOpenCv />\n      <MyComponent />\n      <Example />\n      {/*<VideoCanvas />\n      <DetectCanvas /> */}\n    </OpenCvProvider>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}