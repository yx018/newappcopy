{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nconst reducer = combineReducers({\n  coreStore: (state = [false, false, false], action) => {\n    let newState = Object.assign([], state);\n\n    if (action.type === 'CvLoad') {\n      newState[0] = action.payload;\n    }\n\n    if (action.type === 'VideoTagLoad') {\n      newState[1] = action.payload;\n    }\n\n    if (action.type === 'VideoSourceLoad') {\n      newState[2] = action.payload;\n    }\n\n    return newState;\n  }\n});\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["/Users/yangxu/newapp/src/store.js"],"names":["createStore","combineReducers","reducer","coreStore","state","action","newState","Object","assign","type","payload","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,MAAMC,OAAO,GAAGD,eAAe,CAAC;AAC5BE,EAAAA,SAAS,EAAE,CAACC,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAT,EAAgCC,MAAhC,KAA2C;AAClD,QAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAf;;AACA,QAAIC,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA8B;AAC9BH,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcD,MAAM,CAACK,OAArB;AACC;;AACD,QAAIL,MAAM,CAACI,IAAP,KAAgB,cAApB,EAAoC;AACpCH,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcD,MAAM,CAACK,OAArB;AACC;;AACD,QAAIL,MAAM,CAACI,IAAP,KAAgB,iBAApB,EAAuC;AACvCH,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcD,MAAM,CAACK,OAArB;AACC;;AACD,WAAOJ,QAAP;AACH;AAb2B,CAAD,CAA/B;AAiBA,MAAMK,KAAK,GAAGX,WAAW,CAACE,OAAD,CAAzB;AACA,eAAeS,KAAf","sourcesContent":["import { createStore, combineReducers } from 'redux';\n\nconst reducer = combineReducers({\n    coreStore: (state = [false, false, false], action) => {\n        let newState = Object.assign([], state);\n        if (action.type === 'CvLoad') {\n        newState[0] = action.payload\n        }\n        if (action.type === 'VideoTagLoad') {\n        newState[1] = action.payload\n        }\n        if (action.type === 'VideoSourceLoad') {\n        newState[2] = action.payload\n        }\n        return newState;\n    }\n});\n  \n  \nconst store = createStore(reducer)\nexport default store"]},"metadata":{},"sourceType":"module"}