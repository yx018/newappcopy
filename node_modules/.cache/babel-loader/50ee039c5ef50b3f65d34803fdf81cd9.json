{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yangxu/newappcopy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yangxu/newappcopy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{OpenCvProvider,useOpenCv}from'opencv-react';import{React,useCallback,useEffect}from'react';function Utils(cv){// const { loaded, cv } = useOpenCv();\n// useEffect(() => {\n//     if (cv) {\n//         console.log('utils useEffect', cv);\n//     }\n// }, [cv])\nconsole.log('utils:',cv);var self=this;this.createFileFromUrl=function(path,url,callback){var request=new XMLHttpRequest();request.open('GET',url,true);request.responseType='arraybuffer';request.onload=function(ev){if(request.readyState===4){if(request.status===200){var data=new Uint8Array(request.response);cv.FS_createDataFile('/',path,data,true,false,false);callback();}else{self.printError('Failed to load '+url+' status: '+request.status);return;}}};request.send();};var OPENCV_URL='./opencv/opencv.js';this.loadOpenCv=function(onloadCallback){var script=document.createElement('script');script.setAttribute('async','');script.setAttribute('type','text/javascript');script.addEventListener('load',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!cv.getBuildInformation){_context.next=5;break;}console.log(cv.getBuildInformation());onloadCallback();_context.next=14;break;case 5:if(!(cv instanceof Promise)){_context.next=13;break;}_context.next=8;return cv;case 8:cv=_context.sent;console.log(cv.getBuildInformation());onloadCallback();_context.next=14;break;case 13:cv['onRuntimeInitialized']=function(){console.log(cv.getBuildInformation());onloadCallback();};case 14:case\"end\":return _context.stop();}}},_callee);})));script.addEventListener('error',function(){self.printError('Failed to load '+OPENCV_URL);});script.src=OPENCV_URL;var node=document.getElementsByTagName('script')[0];node.parentNode.insertBefore(script,node);};}export default Utils;","map":{"version":3,"sources":["/Users/yangxu/newappcopy/src/Utils.js"],"names":["OpenCvProvider","useOpenCv","React","useCallback","useEffect","Utils","cv","console","log","self","createFileFromUrl","path","url","callback","request","XMLHttpRequest","open","responseType","onload","ev","readyState","status","data","Uint8Array","response","FS_createDataFile","printError","send","OPENCV_URL","loadOpenCv","onloadCallback","script","document","createElement","setAttribute","addEventListener","getBuildInformation","Promise","src","node","getElementsByTagName","parentNode","insertBefore"],"mappings":"2RAAA,OAASA,cAAT,CAAyBC,SAAzB,KAA0C,cAA1C,CACA,OAAQC,KAAR,CAAeC,WAAf,CAA4BC,SAA5B,KAA4C,OAA5C,CAEA,QAASC,CAAAA,KAAT,CAAeC,EAAf,CAAmB,CAEf;AAEA;AACA;AACA;AACA;AACA;AAEAC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBF,EAAtB,EAEA,GAAIG,CAAAA,IAAI,CAAG,IAAX,CACA,KAAKC,iBAAL,CAAyB,SAASC,IAAT,CAAeC,GAAf,CAAoBC,QAApB,CAA8B,CACnD,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,cAAJ,EAAd,CACAD,OAAO,CAACE,IAAR,CAAa,KAAb,CAAoBJ,GAApB,CAAyB,IAAzB,EACAE,OAAO,CAACG,YAAR,CAAuB,aAAvB,CACAH,OAAO,CAACI,MAAR,CAAiB,SAASC,EAAT,CAAa,CAC1B,GAAIL,OAAO,CAACM,UAAR,GAAuB,CAA3B,CAA8B,CAC1B,GAAIN,OAAO,CAACO,MAAR,GAAmB,GAAvB,CAA4B,CACxB,GAAIC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,UAAJ,CAAeT,OAAO,CAACU,QAAvB,CAAX,CACAlB,EAAE,CAACmB,iBAAH,CAAqB,GAArB,CAA0Bd,IAA1B,CAAgCW,IAAhC,CAAsC,IAAtC,CAA4C,KAA5C,CAAmD,KAAnD,EACAT,QAAQ,GAEX,CALD,IAMK,CACDJ,IAAI,CAACiB,UAAL,CAAgB,kBAAoBd,GAApB,CAA0B,WAA1B,CAAwCE,OAAO,CAACO,MAAhE,EACA,OACH,CACJ,CACJ,CAbD,CAcAP,OAAO,CAACa,IAAR,GACH,CAnBD,CAqBA,GAAMC,CAAAA,UAAU,CAAG,oBAAnB,CACA,KAAKC,UAAL,CAAkB,SAASC,cAAT,CAAyB,CACvC,GAAIC,CAAAA,MAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb,CACAF,MAAM,CAACG,YAAP,CAAoB,OAApB,CAA6B,EAA7B,EACAH,MAAM,CAACG,YAAP,CAAoB,MAApB,CAA4B,iBAA5B,EACAH,MAAM,CAACI,gBAAP,CAAwB,MAAxB,sEAAgC,uIACxB7B,EAAE,CAAC8B,mBADqB,yBAGxB7B,OAAO,CAACC,GAAR,CAAYF,EAAE,CAAC8B,mBAAH,EAAZ,EACAN,cAAc,GAJU,mCASpBxB,EAAE,WAAY+B,CAAAA,OATM,iDAUT/B,CAAAA,EAVS,QAUpBA,EAVoB,eAWpBC,OAAO,CAACC,GAAR,CAAYF,EAAE,CAAC8B,mBAAH,EAAZ,EACAN,cAAc,GAZM,+BAcpBxB,EAAE,CAAC,sBAAD,CAAF,CAA2B,UAAI,CAC3BC,OAAO,CAACC,GAAR,CAAYF,EAAE,CAAC8B,mBAAH,EAAZ,EACAN,cAAc,GACjB,CAHD,CAdoB,uDAAhC,IAqBAC,MAAM,CAACI,gBAAP,CAAwB,OAAxB,CAAiC,UAAM,CACnC1B,IAAI,CAACiB,UAAL,CAAgB,kBAAoBE,UAApC,EACH,CAFD,EAGAG,MAAM,CAACO,GAAP,CAAaV,UAAb,CACA,GAAIW,CAAAA,IAAI,CAAGP,QAAQ,CAACQ,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAAX,CACAD,IAAI,CAACE,UAAL,CAAgBC,YAAhB,CAA6BX,MAA7B,CAAqCQ,IAArC,EACH,CA/BD,CAgCH,CAED,cAAelC,CAAAA,KAAf","sourcesContent":["import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {React, useCallback, useEffect} from 'react'\n\nfunction Utils(cv) {\n\n    // const { loaded, cv } = useOpenCv();\n\n    // useEffect(() => {\n    //     if (cv) {\n    //         console.log('utils useEffect', cv);\n    //     }\n    // }, [cv])\n\n    console.log('utils:', cv);\n\n    let self = this;\n    this.createFileFromUrl = function(path, url, callback) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function(ev) {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    let data = new Uint8Array(request.response);\n                    cv.FS_createDataFile('/', path, data, true, false, false);\n                    callback();\n\n                } \n                else {\n                    self.printError('Failed to load ' + url + ' status: ' + request.status);\n                    return;\n                }\n            }\n        };\n        request.send();\n    };\n\n    const OPENCV_URL = './opencv/opencv.js';\n    this.loadOpenCv = function(onloadCallback) {\n        let script = document.createElement('script');\n        script.setAttribute('async', '');\n        script.setAttribute('type', 'text/javascript');\n        script.addEventListener('load', async () => {\n            if (cv.getBuildInformation)\n            {\n                console.log(cv.getBuildInformation());\n                onloadCallback();\n            }\n            else\n            {\n                // WASM\n                if (cv instanceof Promise) {\n                    cv = await cv;\n                    console.log(cv.getBuildInformation());\n                    onloadCallback();\n                } else {\n                    cv['onRuntimeInitialized']=()=>{\n                        console.log(cv.getBuildInformation()); \n                        onloadCallback();\n                    }\n                }\n            }\n        });\n        script.addEventListener('error', () => {\n            self.printError('Failed to load ' + OPENCV_URL);\n        });\n        script.src = OPENCV_URL;\n        let node = document.getElementsByTagName('script')[0];\n        node.parentNode.insertBefore(script, node);\n    };\n}\n\nexport default Utils;"]},"metadata":{},"sourceType":"module"}