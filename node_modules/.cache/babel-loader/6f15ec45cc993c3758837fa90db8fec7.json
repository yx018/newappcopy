{"ast":null,"code":"var _jsxFileName = \"/Users/yangxu/newappcopy/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { React, useEffect } from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\";\nimport MyComponent from './MyComponent'; // import Utils from './Utils';\n\nimport CreateZone from './test/CreateZone';\nimport Zones from './test/Zones';\nimport Zone from './test/Zone';\nimport { OpenCvProvider, useOpenCv } from 'opencv-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadOpenCv() {\n  _s();\n\n  const {\n    loaded,\n    cv\n  } = useOpenCv();\n  const cv_status = document.getElementById(\"status\");\n  useEffect(() => {\n    console.log(loaded, cv);\n    console.log(window.cv);\n\n    if (loaded) {\n      cv_status.style.display = \"none\";\n    }\n  }, [loaded]);\n  if (loaded) return /*#__PURE__*/_jsxDEV(MyComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);else return /*#__PURE__*/_jsxDEV(\"p\", {\n    id: \"status\",\n    style: ({\n      display: 'block'\n    }, {\n      fontSize: 20\n    }),\n    children: \"OpenCV.js is loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n\n_s(LoadOpenCv, \"UIea8lFmfe2lGJ/UwKqtq8/rXNE=\", false, function () {\n  return [useOpenCv];\n});\n\n_c = LoadOpenCv;\n\nconst App = () => {\n  _s2();\n\n  useEffect(() => {\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof browserName);\n    console.log(browserName);\n\n    if (browserName == 'Safari') {\n      console.log(\"yes\");\n\n      while (true) alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  });\n\n  const onLoaded = () => {\n    console.log('opencv loaded, cv');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(OpenCvProvider, {\n      children: /*#__PURE__*/_jsxDEV(LoadOpenCv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadOpenCv\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/yangxu/newappcopy/src/App.js"],"names":["React","useEffect","browserName","browserVersion","MyComponent","CreateZone","Zones","Zone","OpenCvProvider","useOpenCv","LoadOpenCv","loaded","cv","cv_status","document","getElementById","console","log","window","style","display","fontSize","App","alert","onLoaded"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,qBAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,cAA1C;;;AAIA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAiBH,SAAS,EAAhC;AACA,QAAMI,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAlB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAAoBC,EAApB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACN,EAAnB;;AACA,QAAID,MAAJ,EAAY;AACVE,MAAAA,SAAS,CAACM,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACD;AACF,GANQ,EAMN,CAACT,MAAD,CANM,CAAT;AAOA,MAAIA,MAAJ,EACE,oBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP,CADF,KAGE,oBAAQ;AAAG,IAAA,EAAE,EAAC,QAAN;AAAe,IAAA,KAAK,GAAE;AAACS,MAAAA,OAAO,EAAE;AAAV,OAAoB;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAtB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;;GAhBQX,U;UAEgBD,S;;;KAFhBC,U;;AAkBT,MAAMY,GAAG,GAAG,MAAM;AAAA;;AAEhBrB,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEf,WAAY,IAAGC,cAAe,EAA7C;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOf,WAAnB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;;AACA,QAAIA,WAAW,IAAI,QAAnB,EAA4B;AAC1Bc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,aAAM,IAAN,EACEM,KAAK,CAAC,sGAAD,CAAL;AACH;AACF,GATQ,CAAT;;AAWA,QAAMC,QAAQ,GAAG,MAAM;AACrBR,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,2BACA,QAAC,cAAD;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA3BD;;IAAMK,G;;MAAAA,G;AA6BN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useEffect} from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\";\nimport MyComponent from './MyComponent'\n// import Utils from './Utils';\n\nimport CreateZone from './test/CreateZone'\nimport Zones from './test/Zones';\nimport Zone from './test/Zone';\n\nimport { OpenCvProvider, useOpenCv } from 'opencv-react'\n\n\n\nfunction LoadOpenCv() {\n\n  const { loaded, cv } = useOpenCv()\n  const cv_status = document.getElementById(\"status\");\n\n  useEffect(() => {\n    console.log(loaded, cv);\n    console.log(window.cv);\n    if (loaded) {\n      cv_status.style.display = \"none\";\n    }\n  }, [loaded])\n  if (loaded)\n    return(<MyComponent />)\n  else\n    return (<p id=\"status\" style={{display: 'block'}, {fontSize: 20}}>OpenCV.js is loading...</p>)\n}\n\nconst App = () => {\n\n  useEffect(()=>{\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof(browserName));\n    console.log(browserName);\n    if (browserName == 'Safari'){\n      console.log(\"yes\");\n      while(true)\n        alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  })\n\n  const onLoaded = () => {\n    console.log('opencv loaded, cv')\n  }\n    \n  return (\n    <div> \n    <OpenCvProvider>\n      <LoadOpenCv />\n      {/* <MyComponent /> */}\n      {/* <CreateZone /> */}\n      {/* <Zones /> */}\n    </OpenCvProvider>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}