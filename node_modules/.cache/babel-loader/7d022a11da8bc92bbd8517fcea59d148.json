{"ast":null,"code":"var _jsxFileName = \"/Users/yangxu/newappcopy/src/MyComponent.js\",\n    _s = $RefreshSig$();\n\nimport { OpenCvProvider, useOpenCv } from 'opencv-react';\nimport { useEffect, useState } from 'react';\nimport './MyComponent.css';\nimport Utils from './Utils';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyComponent() {\n  _s();\n\n  const {\n    loaded,\n    cv\n  } = useOpenCv();\n  const [videoLoaded, setVideoLoaded] = useState(false);\n  useEffect(() => {\n    console.log(loaded, cv);\n\n    if (loaded) {\n      console.log('component cv loaded');\n\n      if (videoLoaded) {\n        console.log('video loaded');\n        openCvReady();\n      }\n    }\n  }, [loaded, videoLoaded]); // const [count, setCount] = useState(0);\n\n  const catchZoomWindow = () => {\n    navigator.mediaDevices.getDisplayMedia({\n      video: true,\n      audio: false\n    }).then(function (stream) {\n      var video = document.getElementById(\"cam_input\");\n      var add_button = document.getElementById(\"add\");\n      var zoom_window_text = document.getElementById(\"zoom_window_text\");\n      var process_window_text = document.getElementById(\"process_window_text\");\n      var output = document.getElementById(\"canvas_output\"); // console.log(video);\n      // console.log(stream);\n\n      video.srcObject = stream;\n      console.log(stream);\n      let settings = stream.getVideoTracks()[0].getSettings();\n      console.log(settings);\n      add_button.style.display = \"none\";\n      zoom_window_text.style.display = \"none\";\n      process_window_text.style.display = \"none\"; // FPS = settings.frameRate;\n\n      output.style.width = video.style.width;\n      output.style.height = video.style.height;\n      video.play();\n    }).then(() => {\n      // openCvReady();\n      // utils.loadOpenCv(openCvReady);\n      setVideoLoaded(true);\n    }).catch(err => {\n      console.log(\"An error occurred! \" + err);\n    });\n  };\n\n  function openCvReady() {\n    // const { loaded, cv } = useOpenCv();\n    console.log('opencvReady', cv.Mat, loaded);\n    let utils = new Utils(cv);\n    let FPS = 0.25;\n    let video = document.getElementById(\"cam_input\");\n    let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n    let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n    let gray = new cv.Mat();\n    let cap = new cv.VideoCapture(video);\n    let faces = new cv.RectVector();\n    let classifier = new cv.CascadeClassifier();\n    let minsize = new cv.Size(0, 0);\n    let maxsize = new cv.Size(1000, 1000);\n    let faceCascadeFile = \"haarcascade_frontalface_default.xml\";\n    let clip_width = video.width / 5;\n    let clip_height = video.height / 5;\n    console.log('cvReady classifier', classifier);\n    console.log('here'); // utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, ()=>{\n    //     classifier.load(faceCascadeFile);\n    //     // processVideo();\n    //     // catch(error){console.log(error)};\n    // });\n    // utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n    //     console.log('here2');\n    //     classifier.load(faceCascadeFile) // in the callback, load the cascade from file\n    //     .then(()=>{\n    //         console.log('AAA'); \n    //         processVideo();\n    //     })\n    //     .catch((err)=>{console.log('load classifier:', err)});\n    // });\n    // let face_row = -1;\n    // let face_col = -1;\n    // while(true){\n    //     let begin = Date.now();\n    //     cap.read(src);\n    //     src.copyTo(dst);\n    //     cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n    //     console.log('process classifier:', classifier);\n    //     // console.log(classifier.load);\n    //     // console.log(gray);\n    //     // console.log(faces);\n    //     try{\n    //         classifier.detectMultiScale(gray, faces, 1.1, 3);\n    //     }catch(err){\n    //         console.log(err);\n    //     }\n    // }\n\n    function captureImageFromVideo() {\n      var canvas = document.createElement('canvas');\n      canvas.width = video.width * 0.5;\n      canvas.height = video.height * 0.5;\n      canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height); // var img = document.createElement('img');\n\n      var base64Canvas = canvas.toDataURL('image/ipeg').split(';base64,')[1];\n      return base64Canvas;\n    }\n\n    async function getFaceFromFaceplusplus() {\n      var post_img = captureImageFromVideo();\n      let formData = new FormData();\n      formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n      formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n      formData.append('image_base64', post_img);\n      let response = await fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n        method: 'post',\n        mode: 'no-cors',\n        body: formData\n      }); // let data = await JSON.parse({\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519});\n      // let tmp_response ='{\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519}';\n\n      let data = response.json();\n      return data;\n    }\n\n    function httpPostTest() {\n      var url = 'https://api-cn.faceplusplus.com/facepp/v3/detect';\n      var xhr = new XMLHttpRequest();\n      xhr.responseType = \"json\";\n      xhr.open('POST', url);\n      xhr.setRequestHeader(\"Content-Type\", \"multipart/form-data\"); // xhr.setRequestHeader('Access-Control-Allow-Origin','*');\n\n      var post_img = captureImageFromVideo();\n      let formData = new FormData();\n      formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n      formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n      formData.append('image_base64', post_img);\n      xhr.send(formData);\n\n      xhr.onload = function (e) {\n        console.log(e);\n        console.log('httpPostTest onload。e====>' + JSON.stringify(e));\n      };\n\n      xhr.onreadystatechange = function (e) {\n        console.log('httpPostTest onreadystatechange e====>' + JSON.stringify(e));\n\n        if (xhr.readyState == 4 && xhr.status == 200) {\n          var xhrRes = xhr.responseText;\n          console.log('httpPostTest return message====>' + xhrRes); //正常情况下收到返回值 {\"status\": 1, \"res\": \"http post test return!\"}\n        }\n      };\n    }\n\n    function processVideo() {\n      let begin = Date.now();\n\n      if (video.srcObject != null) {\n        cap.read(src);\n        src.copyTo(dst);\n        cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0); // console.log('process classifier:', classifier);\n\n        var post_img = captureImageFromVideo();\n        let formData = new FormData();\n        formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n        formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n        formData.append('image_base64', post_img); // console.log(post_img);\n        // axios.post('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n        //     // headers: {\n        //     //     'Access-Control-Allow-Origin': '*',\n        //     // },\n        //     mode: 'no-cors',\n        //     body: formData\n        // }).then(function (response) {\n        //     console.log(response);\n        // })\n        // .catch(function (error) {\n        // console.log(error);\n        // });\n\n        fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n          method: 'post',\n          mode: 'no-cors',\n          body: formData\n        }) // .then(res => res.json())\n        .then(obj => {\n          console.log(typeof obj);\n          console.log(obj.faces);\n          console.log(obj.face_num);\n          console.log(obj);\n        }).catch(function (err) {\n          console.log('fetch err:', err);\n        }); // let data = getFaceFromFaceplusplus();\n        // console.log('data:', data);\n\n        httpPostTest(); // var http = new XMLHttpRequest();\n        // var url = 'https://api-cn.faceplusplus.com/facepp/v3/detect';\n        // http.open('POST', url, true);\n        // http.setRequestHeader('Access-Control-Allow-Origin','*');\n        // http.onload = function() {//Call a function when the state changes.\n        //     if(http.readyState == 4 && http.status == 200) {\n        //         console.log(http.responseText);\n        //     }\n        //     else {\n        //         console.log('Failed to load ' + url + ' status: ' + http.status);\n        //     }\n        // }\n        // http.send(formData);\n        // error Message location\n        // classifier.detectMultiScale(gray, faces, 1.1, 3);\n        // try{\n        //     classifier.detectMultiScale(gray, faces, 1.1, 3);\n        // }catch(err){\n        //     console.log(err);\n        // }\n        // for (let i = 0; i < faces.size(); ++i) {\n        //     let face = faces.get(i);\n        //     // console.log(face);\n        //     let face_row = parseInt(face.y/clip_height);\n        //     let face_col = parseInt(face.x/clip_width);\n        //     let tmp_row = parseInt((face.y+face.height-5) / clip_height);\n        //     let tmp_col = parseInt((face.x+face.width-5) / clip_width);\n        //     // console.log([face_row, face_col, tmp_row, tmp_col]);\n        //     if (face.width>=clip_width || face.height>=clip_height || tmp_row!=face_row || tmp_col!=face_col)\n        //         continue;\n        //     let point1 = new cv.Point(face.x, face.y);\n        //     let point2 = new cv.Point(face.x + face.width, face.y + face.height);\n        //     cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\n        // }\n\n        cv.imshow(\"canvas_output\", dst);\n      } // schedule next one.\n\n\n      let delay = 1000 / FPS - (Date.now() - begin);\n      setTimeout(processVideo, delay);\n    } // schedule first one.\n\n\n    setTimeout(processVideo, 0);\n  } // const cv = useOpenCv()\n  // console.log(cv)\n  // const video = document.getElementById(\"video\");\n  // let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n  // let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n  // let gray = new cv.Mat();\n  // let cap = new cv.VideoCapture(video);\n  // let faces = new cv.RectVector();\n  // let classifier = new cv.CascadeClassifier();\n  // let faceCascadeFile = 'haarcascade_frontalface_default.xml'; // path to xml\n  // classifier.load(faceCascadeFile);\n  // console.log(classifier);\n  // function onOpenUtilsReady() {\n  //     let utils = new Utils('errorMessage');\n  //     utils.loadOpenCv(() => {\n  //     let faceCascadeFile = 'haarcascade_frontalface_default.xml';\n  //         utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n  //             document.getElementById('status').innerHTML = 'OpenCV.js is ready.';\n  //         });\n  //     });\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"title\",\n        children: \"iExam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        id: \"tip\",\n        children: \"Please click add button to import the Zoom stream. Then you can scroll down to the iExam window.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"zoom_window_text\",\n        children: \"Zoom window\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"cam_input\",\n        width: \"1200\",\n        height: \"690\",\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        id: \"add\",\n        onClick: catchZoomWindow,\n        width: \"120\",\n        height: \"120\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 133\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"process_window_text\",\n        children: \"iExam window\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas_output\",\n        width: \"1200\",\n        height: \"690\",\n        children: \"This box is for capturing student face\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Details for iExam please refer to slides: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://daoyuan14.github.io/slides/Expo21_iExam.pdf\",\n          target: \"_blank\",\n          children: \"https://daoyuan14.github.io/slides/Expo21_iExam.pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Post-exam recording analysis for desktop version, please view: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/VPRLab/iExam/tree/test\",\n          target: \"_blank\",\n          children: \"https://github.com/VPRLab/iExam/tree/test \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n} // function Utils() {\n//     let self = this;\n//     this.createFileFromUrl = function(path, url, callback) {\n//         console.log(cv);\n//         let request = new XMLHttpRequest();\n//         request.open('GET', url, true);\n//         request.responseType = 'arraybuffer';\n//         request.onload = function(ev) {\n//             if (request.readyState === 4) {\n//                 if (request.status === 200) {\n//                     let data = new Uint8Array(request.response);\n//                     cv.FS_createDataFile('/', path, data, true, false, false);\n//                     callback();\n//                 } else {\n//                     self.printError('Failed to load ' + url + ' status: ' + request.status);\n//                 }\n//             }\n//         };\n//         request.send();\n//     };\n//     const OPENCV_URL = './opencv/opencv.js';\n//     this.loadOpenCv = function(onloadCallback) {\n//         let script = document.createElement('script');\n//         script.setAttribute('async', '');\n//         script.setAttribute('type', 'text/javascript');\n//         script.addEventListener('load', async () => {\n//             if (cv.getBuildInformation)\n//             {\n//                 console.log(cv.getBuildInformation());\n//                 onloadCallback();\n//             }\n//             else\n//             {\n//                 // WASM\n//                 if (cv instanceof Promise) {\n//                     cv = await cv;\n//                     console.log(cv.getBuildInformation());\n//                     onloadCallback();\n//                 } else {\n//                     cv['onRuntimeInitialized']=()=>{  //satisfy this condition\n//                         console.log(cv.getBuildInformation()); \n//                         onloadCallback();\n//                     }\n//                 }\n//             }\n//         });\n//         script.addEventListener('error', () => {\n//             self.printError('Failed to load ' + OPENCV_URL);\n//         });\n//         script.src = OPENCV_URL;\n//         let node = document.getElementsByTagName('script')[0];\n//         node.parentNode.insertBefore(script, node);\n//     };\n// }\n\n\n_s(MyComponent, \"dQIXqR/ajJZxmwZC5Vms6Tw+VkA=\", false, function () {\n  return [useOpenCv];\n});\n\n_c = MyComponent;\nexport default MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"sources":["/Users/yangxu/newappcopy/src/MyComponent.js"],"names":["OpenCvProvider","useOpenCv","useEffect","useState","Utils","axios","MyComponent","loaded","cv","videoLoaded","setVideoLoaded","console","log","openCvReady","catchZoomWindow","navigator","mediaDevices","getDisplayMedia","video","audio","then","stream","document","getElementById","add_button","zoom_window_text","process_window_text","output","srcObject","settings","getVideoTracks","getSettings","style","display","width","height","play","catch","err","Mat","utils","FPS","src","CV_8UC4","dst","CV_8UC1","gray","cap","VideoCapture","faces","RectVector","classifier","CascadeClassifier","minsize","Size","maxsize","faceCascadeFile","clip_width","clip_height","captureImageFromVideo","canvas","createElement","getContext","drawImage","base64Canvas","toDataURL","split","getFaceFromFaceplusplus","post_img","formData","FormData","append","response","fetch","method","mode","body","data","json","httpPostTest","url","xhr","XMLHttpRequest","responseType","open","setRequestHeader","send","onload","e","JSON","stringify","onreadystatechange","readyState","status","xhrRes","responseText","processVideo","begin","Date","now","read","copyTo","cvtColor","COLOR_RGBA2GRAY","obj","face_num","imshow","delay","setTimeout"],"mappings":"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","sourcesContent":["import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {useEffect, useState} from 'react'\nimport './MyComponent.css';\nimport Utils from './Utils';\nimport axios from 'axios';\n\nfunction MyComponent() {\n\n    const { loaded, cv } = useOpenCv();\n    const [videoLoaded, setVideoLoaded] = useState(false);\n\n\n    useEffect(() => {\n        console.log(loaded, cv);\n        if (loaded) {\n            console.log('component cv loaded');\n            if(videoLoaded){\n                console.log('video loaded');\n\n                openCvReady();\n            }\n        }\n    }, [loaded, videoLoaded])\n\n    // const [count, setCount] = useState(0);\n\n    const catchZoomWindow = () => {\n        navigator.mediaDevices.getDisplayMedia({ video: true, audio: false })\n        .then(function(stream) {\n            var video = document.getElementById(\"cam_input\");\n            var add_button = document.getElementById(\"add\");\n            var zoom_window_text = document.getElementById(\"zoom_window_text\");\n            var process_window_text = document.getElementById(\"process_window_text\");\n            var output = document.getElementById(\"canvas_output\");\n            // console.log(video);\n            // console.log(stream);\n            video.srcObject = stream;\n            console.log(stream);\n            let settings = stream.getVideoTracks()[0].getSettings();\n            console.log(settings);\n            add_button.style.display = \"none\";\n            zoom_window_text.style.display = \"none\";\n            process_window_text.style.display = \"none\";\n            // FPS = settings.frameRate;\n            output.style.width = video.style.width;\n            output.style.height = video.style.height;\n            video.play();\n        })\n        .then(()=> {\n            // openCvReady();\n            // utils.loadOpenCv(openCvReady);\n            setVideoLoaded(true);\n            \n        })\n        .catch((err) =>{\n            console.log(\"An error occurred! \" + err);\n        });\n\n    }\n\n    function openCvReady() {\n        // const { loaded, cv } = useOpenCv();\n        \n        console.log('opencvReady', cv.Mat, loaded);\n        let utils = new Utils(cv);\n\n\n    \n        let FPS = 0.25;\n        let video = document.getElementById(\"cam_input\");\n        let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n        let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n        let gray = new cv.Mat();\n        let cap = new cv.VideoCapture(video);\n        let faces = new cv.RectVector();\n        let classifier = new cv.CascadeClassifier();\n        let minsize = new cv.Size(0, 0);\n        let maxsize = new cv.Size(1000, 1000);\n        let faceCascadeFile = \"haarcascade_frontalface_default.xml\";\n        let clip_width = video.width/5;\n        let clip_height = video.height/5;\n\n        console.log('cvReady classifier', classifier);\n        \n        console.log('here');\n        // utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, ()=>{\n        //     classifier.load(faceCascadeFile);\n        //     // processVideo();\n        //     // catch(error){console.log(error)};\n        // });\n\n        \n\n        // utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n        //     console.log('here2');\n        //     classifier.load(faceCascadeFile) // in the callback, load the cascade from file\n        //     .then(()=>{\n        //         console.log('AAA'); \n        //         processVideo();\n        //     })\n        //     .catch((err)=>{console.log('load classifier:', err)});\n            \n        // });\n\n    \n        // let face_row = -1;\n        // let face_col = -1;\n    \n        // while(true){\n        //     let begin = Date.now();\n            \n        //     cap.read(src);\n        //     src.copyTo(dst);\n        //     cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n        //     console.log('process classifier:', classifier);\n        //     // console.log(classifier.load);\n        //     // console.log(gray);\n        //     // console.log(faces);\n            \n\n        //     try{\n        //         classifier.detectMultiScale(gray, faces, 1.1, 3);\n\n        //     }catch(err){\n        //         console.log(err);\n        //     }\n    \n        // }\n\n        function captureImageFromVideo() {\n            var canvas = document.createElement('canvas');\n            canvas.width = video.width * 0.5;\n            canvas.height = video.height * 0.5;\n            canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\n            // var img = document.createElement('img');\n            var base64Canvas = canvas.toDataURL('image/ipeg').split(';base64,')[1];\n            return base64Canvas;\n            \n        }\n\n        async function getFaceFromFaceplusplus() {\n            var post_img = captureImageFromVideo();\n            let formData = new FormData();\n            formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n            formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n            formData.append('image_base64', post_img);\n\n            let response = await fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                method: 'post',\n                mode: 'no-cors',\n                body: formData\n            });\n\n            // let data = await JSON.parse({\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519});\n            // let tmp_response ='{\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519}';\n            \n            let data = response.json();\n            return data;\n        }\n\n\n        function httpPostTest() {\n            var url = 'https://api-cn.faceplusplus.com/facepp/v3/detect';\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = \"json\";\n            xhr.open('POST', url);\n            xhr.setRequestHeader(\"Content-Type\", \"multipart/form-data\");\n            // xhr.setRequestHeader('Access-Control-Allow-Origin','*');\n\n            var post_img = captureImageFromVideo();\n            let formData = new FormData();\n            formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n            formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n            formData.append('image_base64', post_img);\n            xhr.send(formData);\n        \n        \n            xhr.onload = function(e) {\n                console.log(e)\n                console.log('httpPostTest onload。e====>' + JSON.stringify(e));\n            };\n            xhr.onreadystatechange = function(e) {\n                console.log('httpPostTest onreadystatechange e====>' + JSON.stringify(e));\n                if(xhr.readyState == 4 && xhr.status == 200){\n                    var xhrRes = xhr.responseText;\n                    console.log('httpPostTest return message====>' + xhrRes);\n                    //正常情况下收到返回值 {\"status\": 1, \"res\": \"http post test return!\"}\n                }\n            };\n        }\n\n\n        function processVideo() {\n            let begin = Date.now();\n            if (video.srcObject!=null){\n                cap.read(src);\n                src.copyTo(dst);\n                cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n                // console.log('process classifier:', classifier);\n\n\n                var post_img = captureImageFromVideo();\n                let formData = new FormData();\n                formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n                formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n                formData.append('image_base64', post_img);\n\n                // console.log(post_img);\n\n                \n\n                // axios.post('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                //     // headers: {\n                //     //     'Access-Control-Allow-Origin': '*',\n                //     // },\n                //     mode: 'no-cors',\n                //     body: formData\n                // }).then(function (response) {\n                //     console.log(response);\n                // })\n                // .catch(function (error) {\n                // console.log(error);\n                // });\n\n                fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                    method: 'post',\n                    mode: 'no-cors',\n                    body: formData\n                })\n                // .then(res => res.json())\n                .then(obj => {\n                    console.log(typeof(obj));\n                    console.log(obj.faces);\n                    console.log(obj.face_num);\n                    console.log(obj);\n                })\n                .catch(function(err) {\n                    console.log('fetch err:', err);\n                });\n                \n\n                // let data = getFaceFromFaceplusplus();\n                // console.log('data:', data);\n\n                httpPostTest();\n\n                // var http = new XMLHttpRequest();\n                // var url = 'https://api-cn.faceplusplus.com/facepp/v3/detect';\n\n                // http.open('POST', url, true);\n                // http.setRequestHeader('Access-Control-Allow-Origin','*');\n\n                // http.onload = function() {//Call a function when the state changes.\n                //     if(http.readyState == 4 && http.status == 200) {\n                //         console.log(http.responseText);\n                //     }\n                //     else {\n                //         console.log('Failed to load ' + url + ' status: ' + http.status);\n                //     }\n                // }\n                // http.send(formData);\n\n                // error Message location\n                // classifier.detectMultiScale(gray, faces, 1.1, 3);\n    \n                // try{\n                //     classifier.detectMultiScale(gray, faces, 1.1, 3);\n                // }catch(err){\n                //     console.log(err);\n                // }\n\n                // for (let i = 0; i < faces.size(); ++i) {\n                //     let face = faces.get(i);\n                //     // console.log(face);\n                //     let face_row = parseInt(face.y/clip_height);\n                //     let face_col = parseInt(face.x/clip_width);\n    \n                //     let tmp_row = parseInt((face.y+face.height-5) / clip_height);\n                //     let tmp_col = parseInt((face.x+face.width-5) / clip_width);\n                //     // console.log([face_row, face_col, tmp_row, tmp_col]);\n                //     if (face.width>=clip_width || face.height>=clip_height || tmp_row!=face_row || tmp_col!=face_col)\n                //         continue;\n    \n                //     let point1 = new cv.Point(face.x, face.y);\n                //     let point2 = new cv.Point(face.x + face.width, face.y + face.height);\n                //     cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\n                // }\n                cv.imshow(\"canvas_output\", dst);\n            }\n            // schedule next one.\n            let delay = 1000/FPS - (Date.now() - begin);\n            setTimeout(processVideo, delay);\n        }\n        // schedule first one.\n        setTimeout(processVideo, 0);\n        \n    }\n\n\n    // const cv = useOpenCv()\n    // console.log(cv)\n\n    // const video = document.getElementById(\"video\");\n    // let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n    // let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n    // let gray = new cv.Mat();\n    // let cap = new cv.VideoCapture(video);\n    // let faces = new cv.RectVector();\n    // let classifier = new cv.CascadeClassifier();\n\n    // let faceCascadeFile = 'haarcascade_frontalface_default.xml'; // path to xml\n    // classifier.load(faceCascadeFile);\n    // console.log(classifier);\n\n    // function onOpenUtilsReady() {\n    //     let utils = new Utils('errorMessage');\n    //     utils.loadOpenCv(() => {\n    //     let faceCascadeFile = 'haarcascade_frontalface_default.xml';\n    //         utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n    //             document.getElementById('status').innerHTML = 'OpenCV.js is ready.';\n    //         });\n    //     });\n    // }\n\n    return (\n        <>\n        <div className=\"container\">\n            <h2 id=\"title\">iExam</h2>\n            <h6 id=\"tip\">Please click add button to import the Zoom stream. Then you can scroll down to the iExam window.</h6>\n            <p id=\"zoom_window_text\">Zoom window</p>\n            <video id=\"cam_input\" width=\"1200\" height=\"690\" autoPlay muted></video>\n            {/* <img id=\"add\" src=\"add.svg\" alt=\"upload video window\" width=\"128\" height=\"128\" /> */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"add\" onClick={catchZoomWindow} width=\"120\" height=\"120\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/></svg>\n            <p id=\"process_window_text\">iExam window</p>\n            <canvas id=\"canvas_output\" width=\"1200\" height=\"690\">This box is for capturing student face</canvas>\n        </div>\n        <div className=\"footer\">\n            <p>Details for iExam please refer to slides: <a href=\"https://daoyuan14.github.io/slides/Expo21_iExam.pdf\" target=\"_blank\">https://daoyuan14.github.io/slides/Expo21_iExam.pdf</a></p>\n            <p>Post-exam recording analysis for desktop version, please view: <a href=\"https://github.com/VPRLab/iExam/tree/test\" target=\"_blank\">https://github.com/VPRLab/iExam/tree/test </a></p>\n            {/* <p id=\"author\">Author: YANG Xu, Supervisor: WU Daoyuan (VPRLab)</p>\n            <p>Last Modified: Mon Oct 25 2021 23:12:29 GMT+0800 (Hong Kong Standard Time)</p> */}\n        </div>\n        </>\n        \n    )\n}\n\n// function Utils() {\n//     let self = this;\n//     this.createFileFromUrl = function(path, url, callback) {\n//         console.log(cv);\n//         let request = new XMLHttpRequest();\n//         request.open('GET', url, true);\n//         request.responseType = 'arraybuffer';\n//         request.onload = function(ev) {\n//             if (request.readyState === 4) {\n//                 if (request.status === 200) {\n//                     let data = new Uint8Array(request.response);\n//                     cv.FS_createDataFile('/', path, data, true, false, false);\n//                     callback();\n//                 } else {\n//                     self.printError('Failed to load ' + url + ' status: ' + request.status);\n//                 }\n//             }\n//         };\n//         request.send();\n        \n//     };\n\n//     const OPENCV_URL = './opencv/opencv.js';\n//     this.loadOpenCv = function(onloadCallback) {\n//         let script = document.createElement('script');\n//         script.setAttribute('async', '');\n//         script.setAttribute('type', 'text/javascript');\n//         script.addEventListener('load', async () => {\n//             if (cv.getBuildInformation)\n//             {\n//                 console.log(cv.getBuildInformation());\n//                 onloadCallback();\n//             }\n//             else\n//             {\n//                 // WASM\n//                 if (cv instanceof Promise) {\n//                     cv = await cv;\n//                     console.log(cv.getBuildInformation());\n//                     onloadCallback();\n//                 } else {\n//                     cv['onRuntimeInitialized']=()=>{  //satisfy this condition\n//                         console.log(cv.getBuildInformation()); \n//                         onloadCallback();\n//                     }\n//                 }\n//             }\n//         });\n//         script.addEventListener('error', () => {\n//             self.printError('Failed to load ' + OPENCV_URL);\n//         });\n//         script.src = OPENCV_URL;\n//         let node = document.getElementsByTagName('script')[0];\n//         node.parentNode.insertBefore(script, node);\n//     };\n// }\n\n\n\nexport default MyComponent;\n\n\n"]},"metadata":{},"sourceType":"module"}