{"ast":null,"code":"var _jsxFileName = \"/Users/yangxu/newapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useEffect } from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\"; // import VideoCanvas from './VideoCanvas';\n\nimport MyComponent from './MyComponent';\nimport DetectCanvas from './DetectCanvas';\nimport Example from './example';\nimport { OpenCvProvider, useOpenCv } from 'opencv-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadOpenCv() {// return <p>OpenCv React test</p>\n}\n\n_c = LoadOpenCv;\n\nconst App = () => {\n  _s();\n\n  const {\n    loaded,\n    cv\n  } = useOpenCv();\n  const cv_status = document.getElementById(\"status\");\n  useEffect(() => {\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof browserName);\n    console.log(browserName);\n\n    if (browserName == 'Safari') {\n      console.log(\"yes\");\n\n      while (true) alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  });\n  useEffect(() => {\n    if (cv) {\n      console.log(loaded, cv);\n      cv_status.style.display = \"none\";\n    }\n  }, [cv]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(OpenCvProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"status\",\n        style: ({\n          display: 'block'\n        }, {\n          fontSize: 20\n        }),\n        children: \"OpenCV.js is loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MyComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9bgqF/jn7xGPN7MWx5FttDiKFvM=\", false, function () {\n  return [useOpenCv];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadOpenCv\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/yangxu/newapp/src/App.js"],"names":["React","useEffect","browserName","browserVersion","MyComponent","DetectCanvas","Example","OpenCvProvider","useOpenCv","LoadOpenCv","App","loaded","cv","cv_status","document","getElementById","console","log","alert","style","display","fontSize"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,qBAA5C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,cAA1C;;;AAGA,SAASC,UAAT,GAAsB,CAKpB;AACD;;KANQA,U;;AAQT,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAiBJ,SAAS,EAAhC;AACA,QAAMK,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAlB;AAEAd,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEf,WAAY,IAAGC,cAAe,EAA7C;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOf,WAAnB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;;AACA,QAAIA,WAAW,IAAI,QAAnB,EAA4B;AAC1Bc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,aAAM,IAAN,EACEC,KAAK,CAAC,sGAAD,CAAL;AACH;AACF,GATQ,CAAT;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,EAAJ,EAAQ;AACNI,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAAoBC,EAApB;AACAC,MAAAA,SAAS,CAACM,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACD;AACF,GALQ,EAKN,CAACR,EAAD,CALM,CAAT;AAOA,sBACE;AAAA,2BACA,QAAC,cAAD;AAAA,8BACA;AAAG,QAAA,EAAE,EAAC,QAAN;AAAe,QAAA,KAAK,GAAE;AAACQ,UAAAA,OAAO,EAAE;AAAV,WAAoB;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAtB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlCD;;GAAMX,G;UAEmBF,S;;;MAFnBE,G;AAoCN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useEffect} from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\";\n// import VideoCanvas from './VideoCanvas';\nimport MyComponent from './MyComponent'\nimport DetectCanvas from './DetectCanvas';\nimport Example from './example';\n\nimport { OpenCvProvider, useOpenCv } from 'opencv-react'\n\n\nfunction LoadOpenCv() {\n  \n\n  \n  \n  // return <p>OpenCv React test</p>\n}\n\nconst App = () => {\n\n  const { loaded, cv } = useOpenCv()\n  const cv_status = document.getElementById(\"status\");\n\n  useEffect(()=>{\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof(browserName));\n    console.log(browserName);\n    if (browserName == 'Safari'){\n      console.log(\"yes\");\n      while(true)\n        alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  })\n\n  useEffect(() => {\n    if (cv) {\n      console.log(loaded, cv);\n      cv_status.style.display = \"none\";\n    }\n  }, [cv])\n    \n  return (\n    <div> \n    <OpenCvProvider >\n    <p id=\"status\" style={{display: 'block'}, {fontSize: 20}}>OpenCV.js is loading...</p>\n      <MyComponent />\n      <Example />\n      {/*<VideoCanvas />\n      <DetectCanvas /> */}\n    </OpenCvProvider>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}