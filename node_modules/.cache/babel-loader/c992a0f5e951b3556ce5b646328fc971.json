{"ast":null,"code":"import { createContext, useState, useCallback, useEffect, useMemo, createElement, useContext } from 'react';\nvar OpenCvContext = createContext();\nvar OpenCvConsumer = OpenCvContext.Consumer,\n    Provider = OpenCvContext.Provider;\nvar scriptId = 'opencv-react';\nvar moduleConfig = {\n  wasmBinaryFile: 'opencv_js.wasm',\n  usingWasm: true\n};\n\nvar OpenCvProvider = function OpenCvProvider(_ref) {\n  var openCvPath = _ref.openCvPath,\n      children = _ref.children,\n      onLoad = _ref.onLoad;\n\n  var _React$useState = useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  var handleOnLoad = useCallback(function () {\n    if (onLoad) {\n      onLoad(window.cv);\n    }\n\n    setLoaded(true);\n  }, []);\n  useEffect(function () {\n    if (document.getElementById(scriptId) || window.cv) {\n      setLoaded(true);\n      return;\n    }\n\n    moduleConfig.onRuntimeInitialized = handleOnLoad;\n    window.Module = moduleConfig;\n\n    var generateOpenCvScriptTag = function generateOpenCvScriptTag() {\n      var js = document.createElement('script');\n      js.id = scriptId;\n      js.src = openCvPath || 'https://docs.opencv.org/3.4.13/opencv.js';\n      js.nonce = true;\n      js.defer = true;\n      js.async = true;\n      return js;\n    };\n\n    document.body.appendChild(generateOpenCvScriptTag());\n  }, [openCvPath, handleOnLoad]);\n  var memoizedProviderValue = useMemo(function () {\n    return {\n      loaded: loaded,\n      cv: window.cv\n    };\n  }, [loaded]);\n  return /*#__PURE__*/createElement(Provider, {\n    value: memoizedProviderValue\n  }, children);\n};\n\nvar useOpenCv = function useOpenCv() {\n  return useContext(OpenCvContext);\n};\n\nexport { OpenCvConsumer, OpenCvContext, OpenCvProvider, useOpenCv };","map":{"version":3,"sources":["../src/lib/OpenCvProvider.js","../src/lib/useOpenCv.js"],"names":["OpenCvContext","React","Consumer","OpenCvConsumer","Provider","scriptId","moduleConfig","wasmBinaryFile","usingWasm","OpenCvProvider","openCvPath","children","onLoad","loaded","setLoaded","handleOnLoad","window","document","generateOpenCvScriptTag","js","memoizedProviderValue","cv","useOpenCv"],"mappings":";IAEMA,aAAa,GAAGC,aAAAA,E;IAEJE,cAAAA,GAA6BH,aAAAA,CAAvCE,Q;IAA0BE,QAAAA,GAAaJ,aAAAA,CAAbI,Q;AAIlC,IAAMC,QAAQ,GAAd,cAAA;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EADK,gBAAA;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;IAKaC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAAsC;AAAA,MAAnCC,UAAmC,GAAA,IAAA,CAAnCA,UAAmC;AAAA,MAAvBC,QAAuB,GAAA,IAAA,CAAvBA,QAAuB;AAAA,MAAbC,MAAa,GAAA,IAAA,CAAbA,MAAa;;AAAA,MAAA,eAAA,GACtCX,QAAAA,CADsC,KACtCA,CADsC;AAAA,MAC3DY,MAD2D,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MACnDC,SADmD,GAAA,eAAA,CAAA,CAAA,CAAA;;AAGlE,MAAMC,YAAY,GAAG,WAAA,CAAkB,YAAM;AAC3C,QAAA,MAAA,EAAY;AACVH,MAAAA,MAAM,CAACI,MAAM,CAAbJ,EAAM,CAANA;AACD;;AACDE,IAAAA,SAAS,CAATA,IAAS,CAATA;AAJmB,GAAA,EAArB,EAAqB,CAArB;AAOAb,EAAAA,SAAAA,CAAgB,YAAM;AACpB,QAAIgB,QAAQ,CAARA,cAAAA,CAAAA,QAAAA,KAAqCD,MAAM,CAA/C,EAAA,EAAoD;AAClDF,MAAAA,SAAS,CAATA,IAAS,CAATA;AACA;AACD;;AAKDR,IAAAA,YAAY,CAAZA,oBAAAA,GAAAA,YAAAA;AACAU,IAAAA,MAAM,CAANA,MAAAA,GAAAA,YAAAA;;AAEA,QAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpC,UAAMC,EAAE,GAAGF,QAAQ,CAARA,aAAAA,CAAX,QAAWA,CAAX;AACAE,MAAAA,EAAE,CAAFA,EAAAA,GAAAA,QAAAA;AACAA,MAAAA,EAAE,CAAFA,GAAAA,GAAST,UAAU,IAAnBS,0CAAAA;AAEAA,MAAAA,EAAE,CAAFA,KAAAA,GAAAA,IAAAA;AACAA,MAAAA,EAAE,CAAFA,KAAAA,GAAAA,IAAAA;AACAA,MAAAA,EAAE,CAAFA,KAAAA,GAAAA,IAAAA;AAEA,aAAA,EAAA;AATF,KAAA;;AAYAF,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAA0BC,uBAA1BD,EAAAA;AAxBFhB,GAAAA,EAyBG,CAAA,UAAA,EAzBHA,YAyBG,CAzBHA,CAAAA;AA2BA,MAAMmB,qBAAqB,GAAG,OAAA,CAC5B,YAAA;AAAA,WAAO;AAAEP,MAAAA,MAAM,EAAR,MAAA;AAAUQ,MAAAA,EAAE,EAAEL,MAAM,CAACK;AAArB,KAAP;AAD4B,GAAA,EAE5B,CAFF,MAEE,CAF4B,CAA9B;AAKA,SAAA,aAAO,aAAA,CAAA,QAAA,EAAA;AAAU,IAAA,KAAK,EAAED;AAAjB,GAAA,EAAP,QAAO,CAAP;AACD,C;;ICtDYE,SAAS,GAAG,SAAZA,SAAY,GAAA;AAAA,SAAMrB,UAAAA,CAAN,aAAMA,CAAN;AAAlB,C","sourcesContent":["import * as React from 'react'\n\nconst OpenCvContext = React.createContext()\n\nconst { Consumer: OpenCvConsumer, Provider } = OpenCvContext\n\nexport { OpenCvConsumer, OpenCvContext }\n\nconst scriptId = 'opencv-react'\nconst moduleConfig = {\n  wasmBinaryFile: 'opencv_js.wasm',\n  usingWasm: true\n}\n\nexport const OpenCvProvider = ({ openCvPath, children, onLoad }) => {\n  const [loaded, setLoaded] = React.useState(false)\n\n  const handleOnLoad = React.useCallback(() => {\n    if (onLoad) {\n      onLoad(window.cv)\n    }\n    setLoaded(true)\n  }, [])\n\n  React.useEffect(() => {\n    if (document.getElementById(scriptId) || window.cv) {\n      setLoaded(true)\n      return\n    }\n\n    // https://docs.opencv.org/3.4/dc/de6/tutorial_js_nodejs.html\n    // https://medium.com/code-divoire/integrating-opencv-js-with-an-angular-application-20ae11c7e217\n    // https://stackoverflow.com/questions/56671436/cv-mat-is-not-a-constructor-opencv\n    moduleConfig.onRuntimeInitialized = handleOnLoad\n    window.Module = moduleConfig\n\n    const generateOpenCvScriptTag = () => {\n      const js = document.createElement('script')\n      js.id = scriptId\n      js.src = openCvPath || 'https://docs.opencv.org/3.4.13/opencv.js'\n\n      js.nonce = true\n      js.defer = true\n      js.async = true\n\n      return js\n    }\n\n    document.body.appendChild(generateOpenCvScriptTag())\n  }, [openCvPath, handleOnLoad])\n\n  const memoizedProviderValue = React.useMemo(\n    () => ({ loaded, cv: window.cv }),\n    [loaded]\n  )\n\n  return <Provider value={memoizedProviderValue}>{children}</Provider>\n}\n","import * as React from 'react'\nimport { OpenCvContext } from './OpenCvProvider'\n\nexport const useOpenCv = () => React.useContext(OpenCvContext)\n"]},"metadata":{},"sourceType":"module"}