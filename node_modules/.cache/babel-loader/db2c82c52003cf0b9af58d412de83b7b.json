{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yangxu/newappcopy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yangxu/newappcopy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/yangxu/newappcopy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{OpenCvProvider,useOpenCv}from'opencv-react';import{useEffect,useState}from'react';import'./MyComponent.css';import Utils from'./Utils';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function MyComponent(){var _useOpenCv=useOpenCv(),loaded=_useOpenCv.loaded,cv=_useOpenCv.cv;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),videoLoaded=_useState2[0],setVideoLoaded=_useState2[1];useEffect(function(){console.log(loaded,cv);if(loaded){console.log('component cv loaded');if(videoLoaded){console.log('video loaded');openCvReady();}}},[loaded,videoLoaded]);// const [count, setCount] = useState(0);\nvar catchZoomWindow=function catchZoomWindow(){navigator.mediaDevices.getDisplayMedia({video:true,audio:false}).then(function(stream){var video=document.getElementById(\"cam_input\");var add_button=document.getElementById(\"add\");var zoom_window_text=document.getElementById(\"zoom_window_text\");var process_window_text=document.getElementById(\"process_window_text\");var output=document.getElementById(\"canvas_output\");// console.log(video);\n// console.log(stream);\nvideo.srcObject=stream;console.log(stream);var settings=stream.getVideoTracks()[0].getSettings();console.log(settings);add_button.style.display=\"none\";zoom_window_text.style.display=\"none\";process_window_text.style.display=\"none\";// FPS = settings.frameRate;\noutput.style.width=video.style.width;output.style.height=video.style.height;video.play();}).then(function(){// openCvReady();\n// utils.loadOpenCv(openCvReady);\nsetVideoLoaded(true);}).catch(function(err){console.log(\"An error occurred! \"+err);});};function openCvReady(){// const { loaded, cv } = useOpenCv();\nconsole.log('opencvReady',cv.Mat,loaded);var utils=new Utils(cv);var FPS=0.25;var video=document.getElementById(\"cam_input\");var src=new cv.Mat(video.height,video.width,cv.CV_8UC4);var dst=new cv.Mat(video.height,video.width,cv.CV_8UC1);var gray=new cv.Mat();var cap=new cv.VideoCapture(video);var faces=new cv.RectVector();var classifier=new cv.CascadeClassifier();var minsize=new cv.Size(0,0);var maxsize=new cv.Size(1000,1000);var faceCascadeFile=\"haarcascade_frontalface_default.xml\";var clip_width=video.width/5;var clip_height=video.height/5;console.log('cvReady classifier',classifier);console.log('here');utils.createFileFromUrl(faceCascadeFile,faceCascadeFile,function(){classifier.load(faceCascadeFile);});// utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n//     console.log('here2');\n//     classifier.load(faceCascadeFile) // in the callback, load the cascade from file\n//     .then(()=>{\n//         console.log('AAA'); \n//         processVideo();\n//     })\n//     .catch((err)=>{console.log('load classifier:', err)});\n// });\n// let face_row = -1;\n// let face_col = -1;\n// while(true){\n//     let begin = Date.now();\n//     cap.read(src);\n//     src.copyTo(dst);\n//     cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n//     console.log('process classifier:', classifier);\n//     // console.log(classifier.load);\n//     // console.log(gray);\n//     // console.log(faces);\n//     try{\n//         classifier.detectMultiScale(gray, faces, 1.1, 3);\n//     }catch(err){\n//         console.log(err);\n//     }\n// }\nfunction captureImageFromVideo(){var canvas=document.createElement('canvas');canvas.width=video.width*0.5;canvas.height=video.height*0.5;canvas.getContext(\"2d\").drawImage(video,0,0,canvas.width,canvas.height);// var img = document.createElement('img');\nvar base64Canvas=canvas.toDataURL('image/ipeg').split(';base64,')[1];return base64Canvas;}function getFaceFromFaceplusplus(){return _getFaceFromFaceplusplus.apply(this,arguments);}function _getFaceFromFaceplusplus(){_getFaceFromFaceplusplus=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var post_img,formData,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:post_img=captureImageFromVideo();formData=new FormData();formData.append('api_key','ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');formData.append('api_secret','Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');formData.append('image_base64',post_img);_context.next=7;return fetch('https://api-cn.faceplusplus.com/facepp/v3/detect',{method:'post',mode:'no-cors',body:formData});case 7:response=_context.sent;// let data = await JSON.parse({\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519});\n// let tmp_response ='{\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519}';\ndata=response.json();return _context.abrupt(\"return\",data);case 10:case\"end\":return _context.stop();}}},_callee);}));return _getFaceFromFaceplusplus.apply(this,arguments);}function processVideo(){var begin=Date.now();if(video.srcObject!=null){cap.read(src);src.copyTo(dst);cv.cvtColor(dst,gray,cv.COLOR_RGBA2GRAY,0);// console.log('process classifier:', classifier);\nvar post_img=captureImageFromVideo();var formData=new FormData();formData.append('api_key','ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');formData.append('api_secret','Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');formData.append('image_base64',post_img);// console.log(post_img);\n// axios.post('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n//     // headers: {\n//     //     'Access-Control-Allow-Origin': '*',\n//     // },\n//     mode: 'no-cors',\n//     body: formData\n// }).then(function (response) {\n//     console.log(response);\n// })\n// .catch(function (error) {\n// console.log(error);\n// });\n// fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n//     method: 'post',\n//     mode: 'no-cors',\n//     body: formData\n// })\n// // .then(res => res.json())\n// .then(res => {\n//     console.log(typeof(res));\n//     console.log(res);\n//     console.log(res.json());\n// })\n// .catch(function(err) {\n//     console.log('fetch err:', err);\n// });\n// let data = getFaceFromFaceplusplus();\n// console.log('data:', data);\n// var http = new XMLHttpRequest();\n// var url = 'https://api-cn.faceplusplus.com/facepp/v3/detect';\n// http.open('POST', url, true);\n// http.setRequestHeader('Access-Control-Allow-Origin','*');\n// http.onload = function() {//Call a function when the state changes.\n//     if(http.readyState == 4 && http.status == 200) {\n//         console.log(http.responseText);\n//     }\n//     else {\n//         console.log('Failed to load ' + url + ' status: ' + http.status);\n//     }\n// }\n// http.send(formData);\n// error Message location\n// classifier.detectMultiScale(gray, faces, 1.1, 3);\ntry{classifier.detectMultiScale(gray,faces,1.1,3);}catch(err){console.log(err);}for(var i=0;i<faces.size();++i){var face=faces.get(i);// console.log(face);\nvar face_row=parseInt(face.y/clip_height);var face_col=parseInt(face.x/clip_width);var tmp_row=parseInt((face.y+face.height-5)/clip_height);var tmp_col=parseInt((face.x+face.width-5)/clip_width);// console.log([face_row, face_col, tmp_row, tmp_col]);\nif(face.width>=clip_width||face.height>=clip_height||tmp_row!=face_row||tmp_col!=face_col)continue;var point1=new cv.Point(face.x,face.y);var point2=new cv.Point(face.x+face.width,face.y+face.height);cv.rectangle(dst,point1,point2,[255,0,0,255]);}cv.imshow(\"canvas_output\",dst);}// schedule next one.\nvar delay=1000/FPS-(Date.now()-begin);setTimeout(processVideo,delay);}// schedule first one.\nsetTimeout(processVideo,0);}// const cv = useOpenCv()\n// console.log(cv)\n// const video = document.getElementById(\"video\");\n// let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n// let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n// let gray = new cv.Mat();\n// let cap = new cv.VideoCapture(video);\n// let faces = new cv.RectVector();\n// let classifier = new cv.CascadeClassifier();\n// let faceCascadeFile = 'haarcascade_frontalface_default.xml'; // path to xml\n// classifier.load(faceCascadeFile);\n// console.log(classifier);\n// function onOpenUtilsReady() {\n//     let utils = new Utils('errorMessage');\n//     utils.loadOpenCv(() => {\n//     let faceCascadeFile = 'haarcascade_frontalface_default.xml';\n//         utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n//             document.getElementById('status').innerHTML = 'OpenCV.js is ready.';\n//         });\n//     });\n// }\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{id:\"title\",children:\"iExam\"}),/*#__PURE__*/_jsx(\"h6\",{id:\"tip\",children:\"Please click add button to import the Zoom stream. Then you can scroll down to the iExam window.\"}),/*#__PURE__*/_jsx(\"p\",{id:\"zoom_window_text\",children:\"Zoom window\"}),/*#__PURE__*/_jsx(\"video\",{id:\"cam_input\",width:\"1200\",height:\"690\",autoPlay:true,muted:true}),/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",id:\"add\",onClick:catchZoomWindow,width:\"120\",height:\"120\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"})}),/*#__PURE__*/_jsx(\"p\",{id:\"process_window_text\",children:\"iExam window\"}),/*#__PURE__*/_jsx(\"canvas\",{id:\"canvas_output\",width:\"1200\",height:\"690\",children:\"This box is for capturing student face\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Details for iExam please refer to slides: \",/*#__PURE__*/_jsx(\"a\",{href:\"https://daoyuan14.github.io/slides/Expo21_iExam.pdf\",target:\"_blank\",children:\"https://daoyuan14.github.io/slides/Expo21_iExam.pdf\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Post-exam recording analysis for desktop version, please view: \",/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/VPRLab/iExam/tree/test\",target:\"_blank\",children:\"https://github.com/VPRLab/iExam/tree/test \"})]})]})]});}// function Utils() {\n//     let self = this;\n//     this.createFileFromUrl = function(path, url, callback) {\n//         console.log(cv);\n//         let request = new XMLHttpRequest();\n//         request.open('GET', url, true);\n//         request.responseType = 'arraybuffer';\n//         request.onload = function(ev) {\n//             if (request.readyState === 4) {\n//                 if (request.status === 200) {\n//                     let data = new Uint8Array(request.response);\n//                     cv.FS_createDataFile('/', path, data, true, false, false);\n//                     callback();\n//                 } else {\n//                     self.printError('Failed to load ' + url + ' status: ' + request.status);\n//                 }\n//             }\n//         };\n//         request.send();\n//     };\n//     const OPENCV_URL = './opencv/opencv.js';\n//     this.loadOpenCv = function(onloadCallback) {\n//         let script = document.createElement('script');\n//         script.setAttribute('async', '');\n//         script.setAttribute('type', 'text/javascript');\n//         script.addEventListener('load', async () => {\n//             if (cv.getBuildInformation)\n//             {\n//                 console.log(cv.getBuildInformation());\n//                 onloadCallback();\n//             }\n//             else\n//             {\n//                 // WASM\n//                 if (cv instanceof Promise) {\n//                     cv = await cv;\n//                     console.log(cv.getBuildInformation());\n//                     onloadCallback();\n//                 } else {\n//                     cv['onRuntimeInitialized']=()=>{  //satisfy this condition\n//                         console.log(cv.getBuildInformation()); \n//                         onloadCallback();\n//                     }\n//                 }\n//             }\n//         });\n//         script.addEventListener('error', () => {\n//             self.printError('Failed to load ' + OPENCV_URL);\n//         });\n//         script.src = OPENCV_URL;\n//         let node = document.getElementsByTagName('script')[0];\n//         node.parentNode.insertBefore(script, node);\n//     };\n// }\nexport default MyComponent;","map":{"version":3,"sources":["/Users/yangxu/newappcopy/src/MyComponent.js"],"names":["OpenCvProvider","useOpenCv","useEffect","useState","Utils","axios","MyComponent","loaded","cv","videoLoaded","setVideoLoaded","console","log","openCvReady","catchZoomWindow","navigator","mediaDevices","getDisplayMedia","video","audio","then","stream","document","getElementById","add_button","zoom_window_text","process_window_text","output","srcObject","settings","getVideoTracks","getSettings","style","display","width","height","play","catch","err","Mat","utils","FPS","src","CV_8UC4","dst","CV_8UC1","gray","cap","VideoCapture","faces","RectVector","classifier","CascadeClassifier","minsize","Size","maxsize","faceCascadeFile","clip_width","clip_height","createFileFromUrl","load","captureImageFromVideo","canvas","createElement","getContext","drawImage","base64Canvas","toDataURL","split","getFaceFromFaceplusplus","post_img","formData","FormData","append","fetch","method","mode","body","response","data","json","processVideo","begin","Date","now","read","copyTo","cvtColor","COLOR_RGBA2GRAY","detectMultiScale","i","size","face","get","face_row","parseInt","y","face_col","x","tmp_row","tmp_col","point1","Point","point2","rectangle","imshow","delay","setTimeout"],"mappings":"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","sourcesContent":["import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {useEffect, useState} from 'react'\nimport './MyComponent.css';\nimport Utils from './Utils';\nimport axios from 'axios';\n\nfunction MyComponent() {\n\n    const { loaded, cv } = useOpenCv();\n    const [videoLoaded, setVideoLoaded] = useState(false);\n\n\n    useEffect(() => {\n        console.log(loaded, cv);\n        if (loaded) {\n            console.log('component cv loaded');\n            if(videoLoaded){\n                console.log('video loaded');\n\n                openCvReady();\n            }\n        }\n    }, [loaded, videoLoaded])\n\n    // const [count, setCount] = useState(0);\n\n    const catchZoomWindow = () => {\n        navigator.mediaDevices.getDisplayMedia({ video: true, audio: false })\n        .then(function(stream) {\n            var video = document.getElementById(\"cam_input\");\n            var add_button = document.getElementById(\"add\");\n            var zoom_window_text = document.getElementById(\"zoom_window_text\");\n            var process_window_text = document.getElementById(\"process_window_text\");\n            var output = document.getElementById(\"canvas_output\");\n            // console.log(video);\n            // console.log(stream);\n            video.srcObject = stream;\n            console.log(stream);\n            let settings = stream.getVideoTracks()[0].getSettings();\n            console.log(settings);\n            add_button.style.display = \"none\";\n            zoom_window_text.style.display = \"none\";\n            process_window_text.style.display = \"none\";\n            // FPS = settings.frameRate;\n            output.style.width = video.style.width;\n            output.style.height = video.style.height;\n            video.play();\n        })\n        .then(()=> {\n            // openCvReady();\n            // utils.loadOpenCv(openCvReady);\n            setVideoLoaded(true);\n            \n        })\n        .catch((err) =>{\n            console.log(\"An error occurred! \" + err);\n        });\n\n    }\n\n    function openCvReady() {\n        // const { loaded, cv } = useOpenCv();\n        \n        console.log('opencvReady', cv.Mat, loaded);\n        let utils = new Utils(cv);\n\n\n    \n        let FPS = 0.25;\n        let video = document.getElementById(\"cam_input\");\n        let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n        let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n        let gray = new cv.Mat();\n        let cap = new cv.VideoCapture(video);\n        let faces = new cv.RectVector();\n        let classifier = new cv.CascadeClassifier();\n        let minsize = new cv.Size(0, 0);\n        let maxsize = new cv.Size(1000, 1000);\n        let faceCascadeFile = \"haarcascade_frontalface_default.xml\";\n        let clip_width = video.width/5;\n        let clip_height = video.height/5;\n\n        console.log('cvReady classifier', classifier);\n        \n        console.log('here');\n\n        utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, ()=>{\n            classifier.load(faceCascadeFile);\n        });\n\n        \n        // utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n        //     console.log('here2');\n        //     classifier.load(faceCascadeFile) // in the callback, load the cascade from file\n        //     .then(()=>{\n        //         console.log('AAA'); \n        //         processVideo();\n        //     })\n        //     .catch((err)=>{console.log('load classifier:', err)});\n            \n        // });\n\n    \n        // let face_row = -1;\n        // let face_col = -1;\n    \n        // while(true){\n        //     let begin = Date.now();\n            \n        //     cap.read(src);\n        //     src.copyTo(dst);\n        //     cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n        //     console.log('process classifier:', classifier);\n        //     // console.log(classifier.load);\n        //     // console.log(gray);\n        //     // console.log(faces);\n            \n\n        //     try{\n        //         classifier.detectMultiScale(gray, faces, 1.1, 3);\n\n        //     }catch(err){\n        //         console.log(err);\n        //     }\n    \n        // }\n\n        function captureImageFromVideo() {\n            var canvas = document.createElement('canvas');\n            canvas.width = video.width * 0.5;\n            canvas.height = video.height * 0.5;\n            canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\n            // var img = document.createElement('img');\n            var base64Canvas = canvas.toDataURL('image/ipeg').split(';base64,')[1];\n            return base64Canvas;\n            \n        }\n\n        async function getFaceFromFaceplusplus() {\n            var post_img = captureImageFromVideo();\n            let formData = new FormData();\n            formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n            formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n            formData.append('image_base64', post_img);\n\n            let response = await fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                method: 'post',\n                mode: 'no-cors',\n                body: formData\n            });\n\n            // let data = await JSON.parse({\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519});\n            // let tmp_response ='{\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519}';\n            \n            let data = response.json();\n            return data;\n        }\n\n        function processVideo() {\n            let begin = Date.now();\n            if (video.srcObject!=null){\n                cap.read(src);\n                src.copyTo(dst);\n                cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n                // console.log('process classifier:', classifier);\n\n\n                var post_img = captureImageFromVideo();\n                let formData = new FormData();\n                formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n                formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n                formData.append('image_base64', post_img);\n\n                // console.log(post_img);\n\n                \n                // axios.post('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                //     // headers: {\n                //     //     'Access-Control-Allow-Origin': '*',\n                //     // },\n                //     mode: 'no-cors',\n                //     body: formData\n                // }).then(function (response) {\n                //     console.log(response);\n                // })\n                // .catch(function (error) {\n                // console.log(error);\n                // });\n\n                // fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                //     method: 'post',\n                //     mode: 'no-cors',\n                //     body: formData\n                // })\n                // // .then(res => res.json())\n                // .then(res => {\n                //     console.log(typeof(res));\n                //     console.log(res);\n                //     console.log(res.json());\n                // })\n                // .catch(function(err) {\n                //     console.log('fetch err:', err);\n                // });\n                \n\n                // let data = getFaceFromFaceplusplus();\n                // console.log('data:', data);\n\n\n                // var http = new XMLHttpRequest();\n                // var url = 'https://api-cn.faceplusplus.com/facepp/v3/detect';\n\n                // http.open('POST', url, true);\n                // http.setRequestHeader('Access-Control-Allow-Origin','*');\n\n                // http.onload = function() {//Call a function when the state changes.\n                //     if(http.readyState == 4 && http.status == 200) {\n                //         console.log(http.responseText);\n                //     }\n                //     else {\n                //         console.log('Failed to load ' + url + ' status: ' + http.status);\n                //     }\n                // }\n                // http.send(formData);\n\n                // error Message location\n                // classifier.detectMultiScale(gray, faces, 1.1, 3);\n    \n                try{\n                    classifier.detectMultiScale(gray, faces, 1.1, 3);\n                }catch(err){\n                    console.log(err);\n                }\n\n                for (let i = 0; i < faces.size(); ++i) {\n                    let face = faces.get(i);\n                    // console.log(face);\n                    let face_row = parseInt(face.y/clip_height);\n                    let face_col = parseInt(face.x/clip_width);\n    \n                    let tmp_row = parseInt((face.y+face.height-5) / clip_height);\n                    let tmp_col = parseInt((face.x+face.width-5) / clip_width);\n                    // console.log([face_row, face_col, tmp_row, tmp_col]);\n                    if (face.width>=clip_width || face.height>=clip_height || tmp_row!=face_row || tmp_col!=face_col)\n                        continue;\n    \n                    let point1 = new cv.Point(face.x, face.y);\n                    let point2 = new cv.Point(face.x + face.width, face.y + face.height);\n                    cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\n                }\n                cv.imshow(\"canvas_output\", dst);\n            }\n            // schedule next one.\n            let delay = 1000/FPS - (Date.now() - begin);\n            setTimeout(processVideo, delay);\n        }\n        // schedule first one.\n        setTimeout(processVideo, 0);\n        \n    }\n\n\n    // const cv = useOpenCv()\n    // console.log(cv)\n\n    // const video = document.getElementById(\"video\");\n    // let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n    // let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n    // let gray = new cv.Mat();\n    // let cap = new cv.VideoCapture(video);\n    // let faces = new cv.RectVector();\n    // let classifier = new cv.CascadeClassifier();\n\n    // let faceCascadeFile = 'haarcascade_frontalface_default.xml'; // path to xml\n    // classifier.load(faceCascadeFile);\n    // console.log(classifier);\n\n    // function onOpenUtilsReady() {\n    //     let utils = new Utils('errorMessage');\n    //     utils.loadOpenCv(() => {\n    //     let faceCascadeFile = 'haarcascade_frontalface_default.xml';\n    //         utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n    //             document.getElementById('status').innerHTML = 'OpenCV.js is ready.';\n    //         });\n    //     });\n    // }\n\n    return (\n        <>\n        <div className=\"container\">\n            <h2 id=\"title\">iExam</h2>\n            <h6 id=\"tip\">Please click add button to import the Zoom stream. Then you can scroll down to the iExam window.</h6>\n            <p id=\"zoom_window_text\">Zoom window</p>\n            <video id=\"cam_input\" width=\"1200\" height=\"690\" autoPlay muted></video>\n            {/* <img id=\"add\" src=\"add.svg\" alt=\"upload video window\" width=\"128\" height=\"128\" /> */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"add\" onClick={catchZoomWindow} width=\"120\" height=\"120\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/></svg>\n            <p id=\"process_window_text\">iExam window</p>\n            <canvas id=\"canvas_output\" width=\"1200\" height=\"690\">This box is for capturing student face</canvas>\n        </div>\n        <div className=\"footer\">\n            <p>Details for iExam please refer to slides: <a href=\"https://daoyuan14.github.io/slides/Expo21_iExam.pdf\" target=\"_blank\">https://daoyuan14.github.io/slides/Expo21_iExam.pdf</a></p>\n            <p>Post-exam recording analysis for desktop version, please view: <a href=\"https://github.com/VPRLab/iExam/tree/test\" target=\"_blank\">https://github.com/VPRLab/iExam/tree/test </a></p>\n            {/* <p id=\"author\">Author: YANG Xu, Supervisor: WU Daoyuan (VPRLab)</p>\n            <p>Last Modified: Mon Oct 25 2021 23:12:29 GMT+0800 (Hong Kong Standard Time)</p> */}\n        </div>\n        </>\n        \n    )\n}\n\n// function Utils() {\n//     let self = this;\n//     this.createFileFromUrl = function(path, url, callback) {\n//         console.log(cv);\n//         let request = new XMLHttpRequest();\n//         request.open('GET', url, true);\n//         request.responseType = 'arraybuffer';\n//         request.onload = function(ev) {\n//             if (request.readyState === 4) {\n//                 if (request.status === 200) {\n//                     let data = new Uint8Array(request.response);\n//                     cv.FS_createDataFile('/', path, data, true, false, false);\n//                     callback();\n//                 } else {\n//                     self.printError('Failed to load ' + url + ' status: ' + request.status);\n//                 }\n//             }\n//         };\n//         request.send();\n        \n//     };\n\n//     const OPENCV_URL = './opencv/opencv.js';\n//     this.loadOpenCv = function(onloadCallback) {\n//         let script = document.createElement('script');\n//         script.setAttribute('async', '');\n//         script.setAttribute('type', 'text/javascript');\n//         script.addEventListener('load', async () => {\n//             if (cv.getBuildInformation)\n//             {\n//                 console.log(cv.getBuildInformation());\n//                 onloadCallback();\n//             }\n//             else\n//             {\n//                 // WASM\n//                 if (cv instanceof Promise) {\n//                     cv = await cv;\n//                     console.log(cv.getBuildInformation());\n//                     onloadCallback();\n//                 } else {\n//                     cv['onRuntimeInitialized']=()=>{  //satisfy this condition\n//                         console.log(cv.getBuildInformation()); \n//                         onloadCallback();\n//                     }\n//                 }\n//             }\n//         });\n//         script.addEventListener('error', () => {\n//             self.printError('Failed to load ' + OPENCV_URL);\n//         });\n//         script.src = OPENCV_URL;\n//         let node = document.getElementsByTagName('script')[0];\n//         node.parentNode.insertBefore(script, node);\n//     };\n// }\n\n\n\nexport default MyComponent;\n\n\n"]},"metadata":{},"sourceType":"module"}