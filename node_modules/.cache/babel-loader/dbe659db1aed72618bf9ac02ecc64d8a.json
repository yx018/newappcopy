{"ast":null,"code":"var _jsxFileName = \"/Users/yangxu/newapp/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { React, useEffect } from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\"; // import VideoCanvas from './VideoCanvas';\n\nimport MyComponent from './MyComponent';\nimport DetectCanvas from './DetectCanvas';\nimport Example from './example';\nimport { OpenCvProvider, useOpenCv } from 'opencv-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoadOpenCv() {\n  _s();\n\n  const {\n    loaded,\n    cv\n  } = useOpenCv();\n  useEffect(() => {\n    if (cv) {\n      console.log(loaded, cv);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MyComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"status\",\n      style: ({\n        display: 'block'\n      }, {\n        fontSize: 20\n      }),\n      children: \"OpenCV.js is loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }, [cv]); // return <p>OpenCv React test</p>\n}\n\n_s(LoadOpenCv, \"UIea8lFmfe2lGJ/UwKqtq8/rXNE=\", false, function () {\n  return [useOpenCv];\n});\n\n_c = LoadOpenCv;\n\nconst App = () => {\n  _s2();\n\n  useEffect(() => {\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof browserName);\n    console.log(browserName);\n\n    if (browserName == 'Safari') {\n      console.log(\"yes\");\n\n      while (true) alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(OpenCvProvider, {\n      children: /*#__PURE__*/_jsxDEV(LoadOpenCv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadOpenCv\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/yangxu/newapp/src/App.js"],"names":["React","useEffect","browserName","browserVersion","MyComponent","DetectCanvas","Example","OpenCvProvider","useOpenCv","LoadOpenCv","loaded","cv","console","log","display","fontSize","App","alert"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,qBAA5C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,cAA1C;;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAiBH,SAAS,EAAhC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,EAAJ,EAAQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoBC,EAApB;AACA,0BACA;AAAA,gCACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA,sBADA;AAMD;;AACD,wBAAQ;AAAG,MAAA,EAAE,EAAC,QAAN;AAAe,MAAA,KAAK,GAAE;AAACG,QAAAA,OAAO,EAAE;AAAV,SAAoB;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAtB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACD,GAXQ,EAWN,CAACJ,EAAD,CAXM,CAAT,CAHoB,CAiBpB;AACD;;GAlBQF,U;UACgBD,S;;;KADhBC,U;;AAoBT,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAEhBf,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEX,WAAY,IAAGC,cAAe,EAA7C;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOX,WAAnB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;;AACA,QAAIA,WAAW,IAAI,QAAnB,EAA4B;AAC1BU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,aAAM,IAAN,EACEI,KAAK,CAAC,sGAAD,CAAL;AACH;AACF,GATQ,CAAT;AAWA,sBACE;AAAA,2BACA,QAAC,cAAD;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtBD;;IAAMD,G;;MAAAA,G;AAwBN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useEffect} from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\";\n// import VideoCanvas from './VideoCanvas';\nimport MyComponent from './MyComponent'\nimport DetectCanvas from './DetectCanvas';\nimport Example from './example';\n\nimport { OpenCvProvider, useOpenCv } from 'opencv-react'\n\n\nfunction LoadOpenCv() {\n  const { loaded, cv } = useOpenCv()\n\n  useEffect(() => {\n    if (cv) {\n      console.log(loaded, cv);\n      return (    \n      <>  \n      <MyComponent />\n      <Example />\n      </>\n      )\n    }\n    return (<p id=\"status\" style={{display: 'block'}, {fontSize: 20}}>OpenCV.js is loading...</p>)\n  }, [cv])\n\n  \n  // return <p>OpenCv React test</p>\n}\n\nconst App = () => {\n\n  useEffect(()=>{\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof(browserName));\n    console.log(browserName);\n    if (browserName == 'Safari'){\n      console.log(\"yes\");\n      while(true)\n        alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  })\n    \n  return (\n    <div> \n    <OpenCvProvider >\n      <LoadOpenCv />\n      {/*<VideoCanvas />\n      <DetectCanvas /> */}\n    </OpenCvProvider>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}