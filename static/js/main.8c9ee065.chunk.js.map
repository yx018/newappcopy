{"version":3,"sources":["Utils.js","MyComponent.js","test/CreateZone.js","test/Zone.js","test/Zones.js","App.js","index.js"],"names":["Utils","cv","console","log","self","this","createFileFromUrl","path","url","callback","request","XMLHttpRequest","open","responseType","onload","ev","readyState","status","printError","data","Uint8Array","response","FS_createDataFile","send","OPENCV_URL","loadOpenCv","onloadCallback","script","document","createElement","setAttribute","addEventListener","a","getBuildInformation","Promise","src","node","getElementsByTagName","parentNode","insertBefore","MyComponent","useOpenCv","loaded","useState","videoLoaded","setVideoLoaded","useEffect","Mat","utils","FPS","video","getElementById","height","width","CV_8UC4","dst","CV_8UC1","gray","cap","VideoCapture","faces","RectVector","classifier","CascadeClassifier","faceCascadeFile","Size","clip_width","clip_height","captureImageFromVideo","canvas","getContext","drawImage","toDataURL","split","processVideo","begin","Date","now","srcObject","read","copyTo","cvtColor","COLOR_RGBA2GRAY","post_img","formData","FormData","append","detectMultiScale","err","i","size","face","get","face_row","parseInt","y","face_col","x","tmp_row","tmp_col","point1","Point","point2","rectangle","imshow","delay","setTimeout","load","openCvReady","className","id","autoPlay","muted","xmlns","onClick","navigator","mediaDevices","getDisplayMedia","audio","then","stream","add_button","zoom_window_text","process_window_text","output","settings","getVideoTracks","getSettings","style","display","play","catch","viewBox","d","href","target","CreateZone","props","state","zone","name","zipCode","event","updated","Object","assign","value","setState","JSON","stringify","onCreate","onChange","updateZone","bind","type","placeholder","submitZone","Component","Zone","currentZone","zipCodes","numComments","LoadOpenCv","cv_status","window","fontSize","App","browserName","browserVersion","alert","ReactDOM","render"],"mappings":"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","file":"static/js/main.8c9ee065.chunk.js","sourcesContent":["import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {React, useCallback, useEffect} from 'react'\n\nfunction Utils(cv) {\n\n    // const { loaded, cv } = useOpenCv();\n\n    // useEffect(() => {\n    //     if (cv) {\n    //         console.log('utils useEffect', cv);\n    //     }\n    // }, [cv])\n\n    console.log('utils:', cv);\n\n    let self = this;\n    this.createFileFromUrl = function(path, url, callback) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function(ev) {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    let data = new Uint8Array(request.response);\n                    cv.FS_createDataFile('/', path, data, true, false, false);\n                    callback();\n\n                } \n                else {\n                    self.printError('Failed to load ' + url + ' status: ' + request.status);\n                    return;\n                }\n            }\n        };\n        request.send();\n    };\n\n    const OPENCV_URL = './opencv/opencv.js';\n    this.loadOpenCv = function(onloadCallback) {\n        let script = document.createElement('script');\n        script.setAttribute('async', '');\n        script.setAttribute('type', 'text/javascript');\n        script.addEventListener('load', async () => {\n            if (cv.getBuildInformation)\n            {\n                console.log(cv.getBuildInformation());\n                onloadCallback();\n            }\n            else\n            {\n                // WASM\n                if (cv instanceof Promise) {\n                    cv = await cv;\n                    console.log(cv.getBuildInformation());\n                    onloadCallback();\n                } else {\n                    cv['onRuntimeInitialized']=()=>{\n                        console.log(cv.getBuildInformation()); \n                        onloadCallback();\n                    }\n                }\n            }\n        });\n        script.addEventListener('error', () => {\n            self.printError('Failed to load ' + OPENCV_URL);\n        });\n        script.src = OPENCV_URL;\n        let node = document.getElementsByTagName('script')[0];\n        node.parentNode.insertBefore(script, node);\n    };\n}\n\nexport default Utils;","import { OpenCvProvider, useOpenCv } from 'opencv-react'\nimport {useEffect, useState} from 'react'\nimport './MyComponent.css';\nimport Utils from './Utils';\nimport axios from 'axios';\n\nfunction MyComponent() {\n\n    const { loaded, cv } = useOpenCv();\n    const [videoLoaded, setVideoLoaded] = useState(false);\n\n\n    useEffect(() => {\n        console.log(loaded, cv);\n        if (loaded) {\n            console.log('component cv loaded');\n            if(videoLoaded){\n                console.log('video loaded');\n\n                openCvReady();\n            }\n        }\n    }, [loaded, videoLoaded])\n\n    // const [count, setCount] = useState(0);\n\n    const catchZoomWindow = () => {\n        navigator.mediaDevices.getDisplayMedia({ video: true, audio: false })\n        .then(function(stream) {\n            var video = document.getElementById(\"cam_input\");\n            var add_button = document.getElementById(\"add\");\n            var zoom_window_text = document.getElementById(\"zoom_window_text\");\n            var process_window_text = document.getElementById(\"process_window_text\");\n            var output = document.getElementById(\"canvas_output\");\n            // console.log(video);\n            // console.log(stream);\n            video.srcObject = stream;\n            console.log(stream);\n            let settings = stream.getVideoTracks()[0].getSettings();\n            console.log(settings);\n            add_button.style.display = \"none\";\n            zoom_window_text.style.display = \"none\";\n            process_window_text.style.display = \"none\";\n            // FPS = settings.frameRate;\n            output.style.width = video.style.width;\n            output.style.height = video.style.height;\n            video.play();\n        })\n        .then(()=> {\n            // openCvReady();\n            // utils.loadOpenCv(openCvReady);\n            setVideoLoaded(true);\n            \n        })\n        .catch((err) =>{\n            console.log(\"An error occurred! \" + err);\n        });\n\n    }\n\n    function openCvReady() {\n        // const { loaded, cv } = useOpenCv();\n        \n        console.log('opencvReady', cv.Mat, loaded);\n        let utils = new Utils(cv);\n\n\n    \n        let FPS = 0.25;\n        let video = document.getElementById(\"cam_input\");\n        let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n        let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n        let gray = new cv.Mat();\n        let cap = new cv.VideoCapture(video);\n        let faces = new cv.RectVector();\n        let classifier = new cv.CascadeClassifier();\n        let minsize = new cv.Size(0, 0);\n        let maxsize = new cv.Size(1000, 1000);\n        let faceCascadeFile = \"haarcascade_frontalface_default.xml\";\n        let clip_width = video.width/5;\n        let clip_height = video.height/5;\n\n        console.log('cvReady classifier', classifier);\n        \n        console.log('here');\n\n        utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, ()=>{\n            classifier.load(faceCascadeFile);\n        });\n\n        \n        // utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n        //     console.log('here2');\n        //     classifier.load(faceCascadeFile) // in the callback, load the cascade from file\n        //     .then(()=>{\n        //         console.log('AAA'); \n        //         processVideo();\n        //     })\n        //     .catch((err)=>{console.log('load classifier:', err)});\n            \n        // });\n\n    \n        // let face_row = -1;\n        // let face_col = -1;\n    \n        // while(true){\n        //     let begin = Date.now();\n            \n        //     cap.read(src);\n        //     src.copyTo(dst);\n        //     cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n        //     console.log('process classifier:', classifier);\n        //     // console.log(classifier.load);\n        //     // console.log(gray);\n        //     // console.log(faces);\n            \n\n        //     try{\n        //         classifier.detectMultiScale(gray, faces, 1.1, 3);\n\n        //     }catch(err){\n        //         console.log(err);\n        //     }\n    \n        // }\n\n        function captureImageFromVideo() {\n            var canvas = document.createElement('canvas');\n            canvas.width = video.width * 0.5;\n            canvas.height = video.height * 0.5;\n            canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\n            // var img = document.createElement('img');\n            var base64Canvas = canvas.toDataURL('image/ipeg').split(';base64,')[1];\n            return base64Canvas;\n            \n        }\n\n        async function getFaceFromFaceplusplus() {\n            var post_img = captureImageFromVideo();\n            let formData = new FormData();\n            formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n            formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n            formData.append('image_base64', post_img);\n\n            let response = await fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                method: 'post',\n                mode: 'no-cors',\n                body: formData\n            });\n\n            // let data = await JSON.parse({\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519});\n            // let tmp_response ='{\"request_id\": \"1636947607,16ad0124-2bfb-436d-9636-de57d16e23c9\",\"time_used\": 519}';\n            \n            let data = response.json();\n            return data;\n        }\n\n        function processVideo() {\n            let begin = Date.now();\n            if (video.srcObject!=null){\n                cap.read(src);\n                src.copyTo(dst);\n                cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\n                // console.log('process classifier:', classifier);\n\n\n                var post_img = captureImageFromVideo();\n                let formData = new FormData();\n                formData.append('api_key', 'ZK0tSZ-34wMRkeWaCivkN4Ty5MFV4a9j');\n                formData.append('api_secret', 'Kqt6dM83UsEoudBS0egUgYPIt_WOFFhQ');\n                formData.append('image_base64', post_img);\n\n                // console.log(post_img);\n\n                \n                // axios.post('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                //     // headers: {\n                //     //     'Access-Control-Allow-Origin': '*',\n                //     // },\n                //     mode: 'no-cors',\n                //     body: formData\n                // }).then(function (response) {\n                //     console.log(response);\n                // })\n                // .catch(function (error) {\n                // console.log(error);\n                // });\n\n                // fetch('https://api-cn.faceplusplus.com/facepp/v3/detect', {\n                //     method: 'post',\n                //     mode: 'no-cors',\n                //     body: formData\n                // })\n                // // .then(res => res.json())\n                // .then(res => {\n                //     console.log(typeof(res));\n                //     console.log(res);\n                //     console.log(res.json());\n                // })\n                // .catch(function(err) {\n                //     console.log('fetch err:', err);\n                // });\n                \n\n                // let data = getFaceFromFaceplusplus();\n                // console.log('data:', data);\n\n\n                // var http = new XMLHttpRequest();\n                // var url = 'https://api-cn.faceplusplus.com/facepp/v3/detect';\n\n                // http.open('POST', url, true);\n                // http.setRequestHeader('Access-Control-Allow-Origin','*');\n\n                // http.onload = function() {//Call a function when the state changes.\n                //     if(http.readyState == 4 && http.status == 200) {\n                //         console.log(http.responseText);\n                //     }\n                //     else {\n                //         console.log('Failed to load ' + url + ' status: ' + http.status);\n                //     }\n                // }\n                // http.send(formData);\n\n                // error Message location\n                // classifier.detectMultiScale(gray, faces, 1.1, 3);\n    \n                try{\n                    classifier.detectMultiScale(gray, faces, 1.1, 3);\n                }catch(err){\n                    console.log(err);\n                }\n\n                for (let i = 0; i < faces.size(); ++i) {\n                    let face = faces.get(i);\n                    // console.log(face);\n                    let face_row = parseInt(face.y/clip_height);\n                    let face_col = parseInt(face.x/clip_width);\n    \n                    let tmp_row = parseInt((face.y+face.height-5) / clip_height);\n                    let tmp_col = parseInt((face.x+face.width-5) / clip_width);\n                    // console.log([face_row, face_col, tmp_row, tmp_col]);\n                    if (face.width>=clip_width || face.height>=clip_height || tmp_row!=face_row || tmp_col!=face_col)\n                        continue;\n    \n                    let point1 = new cv.Point(face.x, face.y);\n                    let point2 = new cv.Point(face.x + face.width, face.y + face.height);\n                    cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\n                }\n                cv.imshow(\"canvas_output\", dst);\n            }\n            // schedule next one.\n            let delay = 1000/FPS - (Date.now() - begin);\n            setTimeout(processVideo, delay);\n        }\n        // schedule first one.\n        setTimeout(processVideo, 0);\n        \n    }\n\n\n    // const cv = useOpenCv()\n    // console.log(cv)\n\n    // const video = document.getElementById(\"video\");\n    // let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\n    // let dst = new cv.Mat(video.height, video.width, cv.CV_8UC1);\n    // let gray = new cv.Mat();\n    // let cap = new cv.VideoCapture(video);\n    // let faces = new cv.RectVector();\n    // let classifier = new cv.CascadeClassifier();\n\n    // let faceCascadeFile = 'haarcascade_frontalface_default.xml'; // path to xml\n    // classifier.load(faceCascadeFile);\n    // console.log(classifier);\n\n    // function onOpenUtilsReady() {\n    //     let utils = new Utils('errorMessage');\n    //     utils.loadOpenCv(() => {\n    //     let faceCascadeFile = 'haarcascade_frontalface_default.xml';\n    //         utils.createFileFromUrl(faceCascadeFile, faceCascadeFile, () => {\n    //             document.getElementById('status').innerHTML = 'OpenCV.js is ready.';\n    //         });\n    //     });\n    // }\n\n    return (\n        <>\n        <div className=\"container\">\n            <h2 id=\"title\">iExam</h2>\n            <h6 id=\"tip\">Please click add button to import the Zoom stream. Then you can scroll down to the iExam window.</h6>\n            <p id=\"zoom_window_text\">Zoom window</p>\n            <video id=\"cam_input\" width=\"1200\" height=\"690\" autoPlay muted></video>\n            {/* <img id=\"add\" src=\"add.svg\" alt=\"upload video window\" width=\"128\" height=\"128\" /> */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"add\" onClick={catchZoomWindow} width=\"120\" height=\"120\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/></svg>\n            <p id=\"process_window_text\">iExam window</p>\n            <canvas id=\"canvas_output\" width=\"1200\" height=\"690\">This box is for capturing student face</canvas>\n        </div>\n        <div className=\"footer\">\n            <p>Details for iExam please refer to slides: <a href=\"https://daoyuan14.github.io/slides/Expo21_iExam.pdf\" target=\"_blank\">https://daoyuan14.github.io/slides/Expo21_iExam.pdf</a></p>\n            <p>Post-exam recording analysis for desktop version, please view: <a href=\"https://github.com/VPRLab/iExam/tree/test\" target=\"_blank\">https://github.com/VPRLab/iExam/tree/test </a></p>\n            {/* <p id=\"author\">Author: YANG Xu, Supervisor: WU Daoyuan (VPRLab)</p>\n            <p>Last Modified: Mon Oct 25 2021 23:12:29 GMT+0800 (Hong Kong Standard Time)</p> */}\n        </div>\n        </>\n        \n    )\n}\n\n// function Utils() {\n//     let self = this;\n//     this.createFileFromUrl = function(path, url, callback) {\n//         console.log(cv);\n//         let request = new XMLHttpRequest();\n//         request.open('GET', url, true);\n//         request.responseType = 'arraybuffer';\n//         request.onload = function(ev) {\n//             if (request.readyState === 4) {\n//                 if (request.status === 200) {\n//                     let data = new Uint8Array(request.response);\n//                     cv.FS_createDataFile('/', path, data, true, false, false);\n//                     callback();\n//                 } else {\n//                     self.printError('Failed to load ' + url + ' status: ' + request.status);\n//                 }\n//             }\n//         };\n//         request.send();\n        \n//     };\n\n//     const OPENCV_URL = './opencv/opencv.js';\n//     this.loadOpenCv = function(onloadCallback) {\n//         let script = document.createElement('script');\n//         script.setAttribute('async', '');\n//         script.setAttribute('type', 'text/javascript');\n//         script.addEventListener('load', async () => {\n//             if (cv.getBuildInformation)\n//             {\n//                 console.log(cv.getBuildInformation());\n//                 onloadCallback();\n//             }\n//             else\n//             {\n//                 // WASM\n//                 if (cv instanceof Promise) {\n//                     cv = await cv;\n//                     console.log(cv.getBuildInformation());\n//                     onloadCallback();\n//                 } else {\n//                     cv['onRuntimeInitialized']=()=>{  //satisfy this condition\n//                         console.log(cv.getBuildInformation()); \n//                         onloadCallback();\n//                     }\n//                 }\n//             }\n//         });\n//         script.addEventListener('error', () => {\n//             self.printError('Failed to load ' + OPENCV_URL);\n//         });\n//         script.src = OPENCV_URL;\n//         let node = document.getElementsByTagName('script')[0];\n//         node.parentNode.insertBefore(script, node);\n//     };\n// }\n\n\n\nexport default MyComponent;\n\n\n","import React, { Component } from \"react\";\n\nexport default class CreateZone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zone: {\n        name: \"\",\n        zipCode: \"\",\n      },\n    };\n  }\n\n  updateZone(event) {\n    let updated = Object.assign({}, this.state.zone);\n    updated[event.target.id] = event.target.value;\n    this.setState({\n      zone: updated,\n    });\n  }\n\n  submitZone(event) {\n    console.log(\"SubmitZone: \" + JSON.stringify(this.state.zone));\n    this.props.onCreate(this.state.zone);\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          onChange={this.updateZone.bind(this)}\n          className=\"form-control\"\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n        />{\" \"}\n        <br />\n        <input\n          onChange={this.updateZone.bind(this)}\n          className=\"form-control\"\n          id=\"zipCode\"\n          type=\"text\"\n          placeholder=\"Zip Code\"\n        />{\" \"}\n        <br />\n        <input\n          onClick={this.submitZone.bind(this)}\n          className=\"btn btn-danger\"\n          type=\"submit\"\n          value=\"Submit Zone\"\n        />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Zone extends Component {\n  render() {\n\n    return (\n      <div >\n        <h2 >\n          <a href=\"#\">\n            {\" \"}\n            {this.props.currentZone.name}{\" \"}\n          </a>\n        </h2>\n        <span className=\"detail\"> {this.props.currentZone.zipCodes} </span>{\" \"}\n        <br />\n        <span className=\"detail\">\n          {\" \"}\n          {this.props.currentZone.numComments} comments{\" \"}\n        </span>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n// import superagent from \"superagent\";\nimport CreateZone from \"./CreateZone\";\nimport Zone from \"./Zone\";\n\nexport default class Zones extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    // superagent\n    //   .get(\"/api/zone\")\n    //   .query(null)\n    //   .set(\"Accept\", \"application/json\")\n    //   .end((err, response) => {\n    //     if (err) {\n    //       alert(\"ERROR: \" + err);\n    //       return;\n    //     }\n    //     console.log(JSON.stringify(response.body));\n    //     let results = response.body.results;\n    //     this.setState({\n    //       list: results,\n    //     });\n    //   });\n  }\n\n  addZone(zone) {\n    let updatedZone = Object.assign({}, zone);\n    updatedZone[\"zipCodes\"] = updatedZone.zipCode.split(\",\");\n    console.log(\"ADD ZONE: \" + JSON.stringify(updatedZone));\n\n    // superagent\n    //   .post(\"/api/zone\")\n    //   .send(updatedZone)\n    //   .set(\"Accept\", \"application/json\")\n    //   .end((err, response) => {\n    //     if (err) {\n    //       alert(\"ERROR: \" + err.message);\n    //       return;\n    //     }\n    //     console.log(\"ZONE CREATED: \" + JSON.stringify(response));\n    //     let updatedList = Object.assign([], this.state.list);\n    //     updatedList.push(response.result);\n    //     this.setState({\n    //       list: updatedList,\n    //     });\n    //   });\n  }\n\n  render() {\n    const listItems = this.state.list.map((zone, i) => {\n      return (\n        <li key={i}>\n          {\" \"}\n          <Zone currentZone={zone} />{\" \"}\n        </li>\n      );\n    });\n\n    return (\n      <div>\n        <ol>{listItems}</ol>\n        <CreateZone onCreate={this.addZone.bind(this)} />\n      </div>\n    );\n  }\n}","import './App.css';\nimport {React, useEffect} from 'react';\nimport { browserName, browserVersion } from \"react-device-detect\";\nimport MyComponent from './MyComponent'\n// import Utils from './Utils';\n\nimport CreateZone from './test/CreateZone'\nimport Zones from './test/Zones';\nimport Zone from './test/Zone';\n\nimport { OpenCvProvider, useOpenCv } from 'opencv-react'\n\n\n\nfunction LoadOpenCv() {\n\n  const { loaded, cv } = useOpenCv()\n  const cv_status = document.getElementById(\"status\");\n\n  useEffect(() => {\n    console.log(loaded, cv);\n    console.log(window.cv);\n    if (loaded) {\n      cv_status.style.display = \"none\";\n    }\n  }, [loaded])\n  if (loaded)\n    return(<MyComponent />)\n  else\n    return (<p id=\"status\" style={{display: 'block'}, {fontSize: 20}}>OpenCV.js is loading...</p>)\n}\n\nconst App = () => {\n\n  useEffect(()=>{\n    console.log(`${browserName} ${browserVersion}`);\n    console.log(typeof(browserName));\n    console.log(browserName);\n    if (browserName == 'Safari'){\n      console.log(\"yes\");\n      while(true)\n        alert(\"You use Safari now, please change another browser because Safari not support capture window function\");\n    }\n  })\n\n  const onLoaded = () => {\n    console.log('opencv loaded, cv')\n  }\n    \n  return (\n    <div> \n    <OpenCvProvider>\n      <LoadOpenCv />\n      {/* <MyComponent /> */}\n      {/* <CreateZone /> */}\n      {/* <Zones /> */}\n    </OpenCvProvider>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}